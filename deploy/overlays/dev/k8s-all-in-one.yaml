apiVersion: v1
data:
  APP_PORT: "8080"
  DEPLOY_ENV: dev
immutable: true
kind: ConfigMap
metadata:
  labels:
    app: golang-api-server
    version: v0.0.1
  name: golang-api-server-5gmfdfg6fh
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: golang-api-server
    version: v0.0.1
  name: golang-api-server-svc
  namespace: default
spec:
  ports:
  - name: http-metrics
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: golang-api-server
    version: v0.0.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: golang-api-server
    version: v0.0.1
  name: golang-api-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: golang-api-server
      version: v0.0.1
  template:
    metadata:
      labels:
        app: golang-api-server
        version: v0.0.1
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: golang-api-server-5gmfdfg6fh
        image: qclaogui/golang-api-server:IMAGE_TAG
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-metrics
        name: golang-api-server
        ports:
        - containerPort: 8080
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /healthz
            port: http-metrics
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 10m
            memory: 10Mi
      imagePullSecrets:
      - name: ucloud-registry
