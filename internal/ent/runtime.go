// Copyright Â© Weifeng Wang <qclaogui@gmail.com>
//
// Licensed under the Apache License 2.0.

// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	"github.com/qclaogui/golang-api-server/internal/ent/schema"
	"github.com/qclaogui/golang-api-server/internal/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUserID is the schema descriptor for user_id field.
	userDescUserID := userFields[0].Descriptor()
	// user.DefaultUserID holds the default value on creation for the user_id field.
	user.DefaultUserID = userDescUserID.Default.(func() uuid.UUID)
	// userDescUserName is the schema descriptor for user_name field.
	userDescUserName := userFields[1].Descriptor()
	// user.UserNameValidator is a validator for the "user_name" field. It is called by the builders before save.
	user.UserNameValidator = userDescUserName.Validators[0].(func(string) error)
	// userDescLastActive is the schema descriptor for last_active field.
	userDescLastActive := userFields[2].Descriptor()
	// user.DefaultLastActive holds the default value on creation for the last_active field.
	user.DefaultLastActive = userDescLastActive.Default.(time.Time)
	// user.UpdateDefaultLastActive holds the default value on update for the last_active field.
	user.UpdateDefaultLastActive = userDescLastActive.UpdateDefault.(func() time.Time)
}
