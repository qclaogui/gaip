name: Helm CI
on:
  pull_request:
    paths:
      - "deploy/helm/**"
env:
  CT_CONFIGFILE: deploy/helm/ct.yaml

jobs:
  regenerate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Regenerate docs
        run: |
          docker run --rm \
            -v "$(pwd)/deploy/helm/charts/gaip:/helm-docs" \
            -u "$(id -u)" \
            jnorwood/helm-docs:v1.11.3
          if ! git diff --exit-code; then
            echo "Helm chart documentation is not up to date. Please run 'make generate-helm-docs' and commit changes!" >&2
            exit 1
          fi

  regenerate-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0

      - name: Regenerate tests
        run: |
          make generate-helm-tests
          if [ ! -z "$(git status --porcelain)" ]; then
            echo "Helm chart tests are not up to date. Please run 'make generate-helm-tests' and commit changes!" >&2
            exit 1
          fi

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config "${CT_CONFIGFILE}"
