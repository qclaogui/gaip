// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: a2a/v1/task.proto

package a2apb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The set of states a Task can be in.
type TaskState int32

const (
	TaskState_TASK_STATE_UNSPECIFIED TaskState = 0
	// Represents the status that acknowledges a task is created
	TaskState_TASK_STATE_SUBMITTED TaskState = 1
	// Represents the status that a task is actively being processed
	TaskState_TASK_STATE_WORKING TaskState = 2
	// Represents the status a task is finished. This is a terminal state
	TaskState_TASK_STATE_COMPLETED TaskState = 3
	// Represents the status a task is done but failed. This is a terminal state
	TaskState_TASK_STATE_FAILED TaskState = 4
	// Represents the status a task was cancelled before it finished.
	// This is a terminal state.
	TaskState_TASK_STATE_CANCELLED TaskState = 5
	// Represents the status that the task requires information to complete.
	// This is an interrupted state.
	TaskState_TASK_STATE_INPUT_REQUIRED TaskState = 6
	// Represents the status that the agent has decided to not perform the task.
	// This may be done during initial task creation or later once an agent
	// has determined it can't or won't proceed. This is a terminal state.
	TaskState_TASK_STATE_REJECTED TaskState = 7
	// Represents the state that some authentication is needed from the upstream
	// client. Authentication is expected to come out-of-band thus this is not
	// an interrupted or terminal state.
	TaskState_TASK_STATE_AUTH_REQUIRED TaskState = 8
)

// Enum value maps for TaskState.
var (
	TaskState_name = map[int32]string{
		0: "TASK_STATE_UNSPECIFIED",
		1: "TASK_STATE_SUBMITTED",
		2: "TASK_STATE_WORKING",
		3: "TASK_STATE_COMPLETED",
		4: "TASK_STATE_FAILED",
		5: "TASK_STATE_CANCELLED",
		6: "TASK_STATE_INPUT_REQUIRED",
		7: "TASK_STATE_REJECTED",
		8: "TASK_STATE_AUTH_REQUIRED",
	}
	TaskState_value = map[string]int32{
		"TASK_STATE_UNSPECIFIED":    0,
		"TASK_STATE_SUBMITTED":      1,
		"TASK_STATE_WORKING":        2,
		"TASK_STATE_COMPLETED":      3,
		"TASK_STATE_FAILED":         4,
		"TASK_STATE_CANCELLED":      5,
		"TASK_STATE_INPUT_REQUIRED": 6,
		"TASK_STATE_REJECTED":       7,
		"TASK_STATE_AUTH_REQUIRED":  8,
	}
)

func (x TaskState) Enum() *TaskState {
	p := new(TaskState)
	*p = x
	return p
}

func (x TaskState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskState) Descriptor() protoreflect.EnumDescriptor {
	return file_a2a_v1_task_proto_enumTypes[0].Descriptor()
}

func (TaskState) Type() protoreflect.EnumType {
	return &file_a2a_v1_task_proto_enumTypes[0]
}

func (x TaskState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskState.Descriptor instead.
func (TaskState) EnumDescriptor() ([]byte, []int) {
	return file_a2a_v1_task_proto_rawDescGZIP(), []int{0}
}

// Task is the core unit of action for A2A. It has a current status
// and when results are created for the task they are stored in the
// artifact. If there are multiple turns for a task, these are stored in
// history.
type Task struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for a task, created by the A2A server.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique identifier for the contextual collection of interactions (tasks
	// and messages). Created by the A2A server.
	ContextId string `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	// The current status of a Task, including state and a message.
	Status *TaskStatus `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// A set of output artifacts for a Task.
	Artifacts []*Artifact `protobuf:"bytes,4,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// protolint:disable REPEATED_FIELD_NAMES_PLURALIZED
	// The history of interactions from a task.
	History []*Message `protobuf:"bytes,5,rep,name=history,proto3" json:"history,omitempty"`
	// protolint:enable REPEATED_FIELD_NAMES_PLURALIZED
	// A key/value object to store custom metadata about a task.
	Metadata      *structpb.Struct `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_a2a_v1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_a2a_v1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_a2a_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetContextId() string {
	if x != nil {
		return x.ContextId
	}
	return ""
}

func (x *Task) GetStatus() *TaskStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Task) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *Task) GetHistory() []*Message {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *Task) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Artifacts are the container for task completed results. These are similar
// to Messages but are intended to be the product of a task, as opposed to
// point-to-point communication.
type Artifact struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique id for the artifact. It must be at least unique within a task.
	ArtifactId string `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`
	// A human readable name for the artifact.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// A human readable description of the artifact, optional.
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// The content of the artifact.
	Parts []*Part `protobuf:"bytes,5,rep,name=parts,proto3" json:"parts,omitempty"`
	// Optional metadata included with the artifact.
	Metadata *structpb.Struct `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The URIs of extensions that are present or contributed to this Artifact.
	Extensions    []string `protobuf:"bytes,7,rep,name=extensions,proto3" json:"extensions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_a2a_v1_task_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_a2a_v1_task_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_a2a_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *Artifact) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Artifact) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

func (x *Artifact) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Artifact) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

// A container for the status of a task
type TaskStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The current state of this task
	State TaskState `protobuf:"varint,1,opt,name=state,proto3,enum=a2a.v1.TaskState" json:"state,omitempty"`
	// A message associated with the status.
	Update *Message `protobuf:"bytes,2,opt,name=update,proto3" json:"update,omitempty"`
	// Timestamp when the status was recorded.
	// Example: "2023-10-27T10:00:00Z"
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskStatus) Reset() {
	*x = TaskStatus{}
	mi := &file_a2a_v1_task_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStatus) ProtoMessage() {}

func (x *TaskStatus) ProtoReflect() protoreflect.Message {
	mi := &file_a2a_v1_task_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStatus.ProtoReflect.Descriptor instead.
func (*TaskStatus) Descriptor() ([]byte, []int) {
	return file_a2a_v1_task_proto_rawDescGZIP(), []int{2}
}

func (x *TaskStatus) GetState() TaskState {
	if x != nil {
		return x.State
	}
	return TaskState_TASK_STATE_UNSPECIFIED
}

func (x *TaskStatus) GetUpdate() *Message {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *TaskStatus) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_a2a_v1_task_proto protoreflect.FileDescriptor

const file_a2a_v1_task_proto_rawDesc = "" +
	"\n" +
	"\x11a2a/v1/task.proto\x12\x06a2a.v1\x1a\x14a2a/v1/message.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf1\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"context_id\x18\x02 \x01(\tR\tcontextId\x12*\n" +
	"\x06status\x18\x03 \x01(\v2\x12.a2a.v1.TaskStatusR\x06status\x12.\n" +
	"\tartifacts\x18\x04 \x03(\v2\x10.a2a.v1.ArtifactR\tartifacts\x12)\n" +
	"\ahistory\x18\x05 \x03(\v2\x0f.a2a.v1.MessageR\ahistory\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"\xda\x01\n" +
	"\bArtifact\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\"\n" +
	"\x05parts\x18\x05 \x03(\v2\f.a2a.v1.PartR\x05parts\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x12\x1e\n" +
	"\n" +
	"extensions\x18\a \x03(\tR\n" +
	"extensions\"\x98\x01\n" +
	"\n" +
	"TaskStatus\x12'\n" +
	"\x05state\x18\x01 \x01(\x0e2\x11.a2a.v1.TaskStateR\x05state\x12'\n" +
	"\x06update\x18\x02 \x01(\v2\x0f.a2a.v1.MessageR\x06update\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*\xfa\x01\n" +
	"\tTaskState\x12\x1a\n" +
	"\x16TASK_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14TASK_STATE_SUBMITTED\x10\x01\x12\x16\n" +
	"\x12TASK_STATE_WORKING\x10\x02\x12\x18\n" +
	"\x14TASK_STATE_COMPLETED\x10\x03\x12\x15\n" +
	"\x11TASK_STATE_FAILED\x10\x04\x12\x18\n" +
	"\x14TASK_STATE_CANCELLED\x10\x05\x12\x1d\n" +
	"\x19TASK_STATE_INPUT_REQUIRED\x10\x06\x12\x17\n" +
	"\x13TASK_STATE_REJECTED\x10\a\x12\x1c\n" +
	"\x18TASK_STATE_AUTH_REQUIRED\x10\bB3Z1github.com/qclaogui/gaip/genproto/a2a/apiv1/a2apbb\x06proto3"

var (
	file_a2a_v1_task_proto_rawDescOnce sync.Once
	file_a2a_v1_task_proto_rawDescData []byte
)

func file_a2a_v1_task_proto_rawDescGZIP() []byte {
	file_a2a_v1_task_proto_rawDescOnce.Do(func() {
		file_a2a_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_a2a_v1_task_proto_rawDesc), len(file_a2a_v1_task_proto_rawDesc)))
	})
	return file_a2a_v1_task_proto_rawDescData
}

var (
	file_a2a_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_a2a_v1_task_proto_msgTypes  = make([]protoimpl.MessageInfo, 3)
	file_a2a_v1_task_proto_goTypes   = []any{
		(TaskState)(0),                // 0: a2a.v1.TaskState
		(*Task)(nil),                  // 1: a2a.v1.Task
		(*Artifact)(nil),              // 2: a2a.v1.Artifact
		(*TaskStatus)(nil),            // 3: a2a.v1.TaskStatus
		(*Message)(nil),               // 4: a2a.v1.Message
		(*structpb.Struct)(nil),       // 5: google.protobuf.Struct
		(*Part)(nil),                  // 6: a2a.v1.Part
		(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	}
)

var file_a2a_v1_task_proto_depIdxs = []int32{
	3, // 0: a2a.v1.Task.status:type_name -> a2a.v1.TaskStatus
	2, // 1: a2a.v1.Task.artifacts:type_name -> a2a.v1.Artifact
	4, // 2: a2a.v1.Task.history:type_name -> a2a.v1.Message
	5, // 3: a2a.v1.Task.metadata:type_name -> google.protobuf.Struct
	6, // 4: a2a.v1.Artifact.parts:type_name -> a2a.v1.Part
	5, // 5: a2a.v1.Artifact.metadata:type_name -> google.protobuf.Struct
	0, // 6: a2a.v1.TaskStatus.state:type_name -> a2a.v1.TaskState
	4, // 7: a2a.v1.TaskStatus.update:type_name -> a2a.v1.Message
	7, // 8: a2a.v1.TaskStatus.timestamp:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_a2a_v1_task_proto_init() }
func file_a2a_v1_task_proto_init() {
	if File_a2a_v1_task_proto != nil {
		return
	}
	file_a2a_v1_message_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_a2a_v1_task_proto_rawDesc), len(file_a2a_v1_task_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_a2a_v1_task_proto_goTypes,
		DependencyIndexes: file_a2a_v1_task_proto_depIdxs,
		EnumInfos:         file_a2a_v1_task_proto_enumTypes,
		MessageInfos:      file_a2a_v1_task_proto_msgTypes,
	}.Build()
	File_a2a_v1_task_proto = out.File
	file_a2a_v1_task_proto_goTypes = nil
	file_a2a_v1_task_proto_depIdxs = nil
}
