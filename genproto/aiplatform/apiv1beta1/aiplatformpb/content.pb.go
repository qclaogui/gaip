// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: qclaogui/aiplatform/v1beta1/content.proto

package aiplatformpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	date "google.golang.org/genproto/googleapis/type/date"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Harm categories that will block the content.
type HarmCategory int32

const (
	// The harm category is unspecified.
	HarmCategory_HARM_CATEGORY_UNSPECIFIED HarmCategory = 0
	// The harm category is hate speech.
	HarmCategory_HARM_CATEGORY_HATE_SPEECH HarmCategory = 1
	// The harm category is dangerous content.
	HarmCategory_HARM_CATEGORY_DANGEROUS_CONTENT HarmCategory = 2
	// The harm category is harassment.
	HarmCategory_HARM_CATEGORY_HARASSMENT HarmCategory = 3
	// The harm category is sexually explicit content.
	HarmCategory_HARM_CATEGORY_SEXUALLY_EXPLICIT HarmCategory = 4
	// Deprecated: Election filter is not longer supported.
	// The harm category is civic integrity.
	//
	// Deprecated: Marked as deprecated in qclaogui/aiplatform/v1beta1/content.proto.
	HarmCategory_HARM_CATEGORY_CIVIC_INTEGRITY HarmCategory = 5
)

// Enum value maps for HarmCategory.
var (
	HarmCategory_name = map[int32]string{
		0: "HARM_CATEGORY_UNSPECIFIED",
		1: "HARM_CATEGORY_HATE_SPEECH",
		2: "HARM_CATEGORY_DANGEROUS_CONTENT",
		3: "HARM_CATEGORY_HARASSMENT",
		4: "HARM_CATEGORY_SEXUALLY_EXPLICIT",
		5: "HARM_CATEGORY_CIVIC_INTEGRITY",
	}
	HarmCategory_value = map[string]int32{
		"HARM_CATEGORY_UNSPECIFIED":       0,
		"HARM_CATEGORY_HATE_SPEECH":       1,
		"HARM_CATEGORY_DANGEROUS_CONTENT": 2,
		"HARM_CATEGORY_HARASSMENT":        3,
		"HARM_CATEGORY_SEXUALLY_EXPLICIT": 4,
		"HARM_CATEGORY_CIVIC_INTEGRITY":   5,
	}
)

func (x HarmCategory) Enum() *HarmCategory {
	p := new(HarmCategory)
	*p = x
	return p
}

func (x HarmCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HarmCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[0].Descriptor()
}

func (HarmCategory) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[0]
}

func (x HarmCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HarmCategory.Descriptor instead.
func (HarmCategory) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{0}
}

// Content Part modality
type Modality int32

const (
	// Unspecified modality.
	Modality_MODALITY_UNSPECIFIED Modality = 0
	// Plain text.
	Modality_TEXT Modality = 1
	// Image.
	Modality_IMAGE Modality = 2
	// Video.
	Modality_VIDEO Modality = 3
	// Audio.
	Modality_AUDIO Modality = 4
	// Document, e.g. PDF.
	Modality_DOCUMENT Modality = 5
)

// Enum value maps for Modality.
var (
	Modality_name = map[int32]string{
		0: "MODALITY_UNSPECIFIED",
		1: "TEXT",
		2: "IMAGE",
		3: "VIDEO",
		4: "AUDIO",
		5: "DOCUMENT",
	}
	Modality_value = map[string]int32{
		"MODALITY_UNSPECIFIED": 0,
		"TEXT":                 1,
		"IMAGE":                2,
		"VIDEO":                3,
		"AUDIO":                4,
		"DOCUMENT":             5,
	}
)

func (x Modality) Enum() *Modality {
	p := new(Modality)
	*p = x
	return p
}

func (x Modality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Modality) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[1].Descriptor()
}

func (Modality) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[1]
}

func (x Modality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Modality.Descriptor instead.
func (Modality) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{1}
}

// The modalities of the response.
type GenerationConfig_Modality int32

const (
	// Unspecified modality. Will be processed as text.
	GenerationConfig_MODALITY_UNSPECIFIED GenerationConfig_Modality = 0
	// Text modality.
	GenerationConfig_TEXT GenerationConfig_Modality = 1
	// Image modality.
	GenerationConfig_IMAGE GenerationConfig_Modality = 2
	// Audio modality.
	GenerationConfig_AUDIO GenerationConfig_Modality = 3
)

// Enum value maps for GenerationConfig_Modality.
var (
	GenerationConfig_Modality_name = map[int32]string{
		0: "MODALITY_UNSPECIFIED",
		1: "TEXT",
		2: "IMAGE",
		3: "AUDIO",
	}
	GenerationConfig_Modality_value = map[string]int32{
		"MODALITY_UNSPECIFIED": 0,
		"TEXT":                 1,
		"IMAGE":                2,
		"AUDIO":                3,
	}
)

func (x GenerationConfig_Modality) Enum() *GenerationConfig_Modality {
	p := new(GenerationConfig_Modality)
	*p = x
	return p
}

func (x GenerationConfig_Modality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerationConfig_Modality) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[2].Descriptor()
}

func (GenerationConfig_Modality) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[2]
}

func (x GenerationConfig_Modality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerationConfig_Modality.Descriptor instead.
func (GenerationConfig_Modality) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 0}
}

// Media resolution for the input media.
type GenerationConfig_MediaResolution int32

const (
	// Media resolution has not been set.
	GenerationConfig_MEDIA_RESOLUTION_UNSPECIFIED GenerationConfig_MediaResolution = 0
	// Media resolution set to low (64 tokens).
	GenerationConfig_MEDIA_RESOLUTION_LOW GenerationConfig_MediaResolution = 1
	// Media resolution set to medium (256 tokens).
	GenerationConfig_MEDIA_RESOLUTION_MEDIUM GenerationConfig_MediaResolution = 2
	// Media resolution set to high (zoomed reframing with 256 tokens).
	GenerationConfig_MEDIA_RESOLUTION_HIGH GenerationConfig_MediaResolution = 3
)

// Enum value maps for GenerationConfig_MediaResolution.
var (
	GenerationConfig_MediaResolution_name = map[int32]string{
		0: "MEDIA_RESOLUTION_UNSPECIFIED",
		1: "MEDIA_RESOLUTION_LOW",
		2: "MEDIA_RESOLUTION_MEDIUM",
		3: "MEDIA_RESOLUTION_HIGH",
	}
	GenerationConfig_MediaResolution_value = map[string]int32{
		"MEDIA_RESOLUTION_UNSPECIFIED": 0,
		"MEDIA_RESOLUTION_LOW":         1,
		"MEDIA_RESOLUTION_MEDIUM":      2,
		"MEDIA_RESOLUTION_HIGH":        3,
	}
)

func (x GenerationConfig_MediaResolution) Enum() *GenerationConfig_MediaResolution {
	p := new(GenerationConfig_MediaResolution)
	*p = x
	return p
}

func (x GenerationConfig_MediaResolution) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerationConfig_MediaResolution) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[3].Descriptor()
}

func (GenerationConfig_MediaResolution) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[3]
}

func (x GenerationConfig_MediaResolution) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerationConfig_MediaResolution.Descriptor instead.
func (GenerationConfig_MediaResolution) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 1}
}

// The model routing preference.
type GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference int32

const (
	// Unspecified model routing preference.
	GenerationConfig_RoutingConfig_AutoRoutingMode_UNKNOWN GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference = 0
	// Prefer higher quality over low cost.
	GenerationConfig_RoutingConfig_AutoRoutingMode_PRIORITIZE_QUALITY GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference = 1
	// Balanced model routing preference.
	GenerationConfig_RoutingConfig_AutoRoutingMode_BALANCED GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference = 2
	// Prefer lower cost over higher quality.
	GenerationConfig_RoutingConfig_AutoRoutingMode_PRIORITIZE_COST GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference = 3
)

// Enum value maps for GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference.
var (
	GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference_name = map[int32]string{
		0: "UNKNOWN",
		1: "PRIORITIZE_QUALITY",
		2: "BALANCED",
		3: "PRIORITIZE_COST",
	}
	GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference_value = map[string]int32{
		"UNKNOWN":            0,
		"PRIORITIZE_QUALITY": 1,
		"BALANCED":           2,
		"PRIORITIZE_COST":    3,
	}
)

func (x GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) Enum() *GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference {
	p := new(GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference)
	*p = x
	return p
}

func (x GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[4].Descriptor()
}

func (GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[4]
}

func (x GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference.Descriptor instead.
func (GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 0, 0, 0}
}

// Options for feature selection preference.
type GenerationConfig_ModelConfig_FeatureSelectionPreference int32

const (
	// Unspecified feature selection preference.
	GenerationConfig_ModelConfig_FEATURE_SELECTION_PREFERENCE_UNSPECIFIED GenerationConfig_ModelConfig_FeatureSelectionPreference = 0
	// Prefer higher quality over lower cost.
	GenerationConfig_ModelConfig_PRIORITIZE_QUALITY GenerationConfig_ModelConfig_FeatureSelectionPreference = 1
	// Balanced feature selection preference.
	GenerationConfig_ModelConfig_BALANCED GenerationConfig_ModelConfig_FeatureSelectionPreference = 2
	// Prefer lower cost over higher quality.
	GenerationConfig_ModelConfig_PRIORITIZE_COST GenerationConfig_ModelConfig_FeatureSelectionPreference = 3
)

// Enum value maps for GenerationConfig_ModelConfig_FeatureSelectionPreference.
var (
	GenerationConfig_ModelConfig_FeatureSelectionPreference_name = map[int32]string{
		0: "FEATURE_SELECTION_PREFERENCE_UNSPECIFIED",
		1: "PRIORITIZE_QUALITY",
		2: "BALANCED",
		3: "PRIORITIZE_COST",
	}
	GenerationConfig_ModelConfig_FeatureSelectionPreference_value = map[string]int32{
		"FEATURE_SELECTION_PREFERENCE_UNSPECIFIED": 0,
		"PRIORITIZE_QUALITY":                       1,
		"BALANCED":                                 2,
		"PRIORITIZE_COST":                          3,
	}
)

func (x GenerationConfig_ModelConfig_FeatureSelectionPreference) Enum() *GenerationConfig_ModelConfig_FeatureSelectionPreference {
	p := new(GenerationConfig_ModelConfig_FeatureSelectionPreference)
	*p = x
	return p
}

func (x GenerationConfig_ModelConfig_FeatureSelectionPreference) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GenerationConfig_ModelConfig_FeatureSelectionPreference) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[5].Descriptor()
}

func (GenerationConfig_ModelConfig_FeatureSelectionPreference) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[5]
}

func (x GenerationConfig_ModelConfig_FeatureSelectionPreference) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GenerationConfig_ModelConfig_FeatureSelectionPreference.Descriptor instead.
func (GenerationConfig_ModelConfig_FeatureSelectionPreference) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 2, 0}
}

// Probability based thresholds levels for blocking.
type SafetySetting_HarmBlockThreshold int32

const (
	// Unspecified harm block threshold.
	SafetySetting_HARM_BLOCK_THRESHOLD_UNSPECIFIED SafetySetting_HarmBlockThreshold = 0
	// Block low threshold and above (i.e. block more).
	SafetySetting_BLOCK_LOW_AND_ABOVE SafetySetting_HarmBlockThreshold = 1
	// Block medium threshold and above.
	SafetySetting_BLOCK_MEDIUM_AND_ABOVE SafetySetting_HarmBlockThreshold = 2
	// Block only high threshold (i.e. block less).
	SafetySetting_BLOCK_ONLY_HIGH SafetySetting_HarmBlockThreshold = 3
	// Block none.
	SafetySetting_BLOCK_NONE SafetySetting_HarmBlockThreshold = 4
	// Turn off the safety filter.
	SafetySetting_OFF SafetySetting_HarmBlockThreshold = 5
)

// Enum value maps for SafetySetting_HarmBlockThreshold.
var (
	SafetySetting_HarmBlockThreshold_name = map[int32]string{
		0: "HARM_BLOCK_THRESHOLD_UNSPECIFIED",
		1: "BLOCK_LOW_AND_ABOVE",
		2: "BLOCK_MEDIUM_AND_ABOVE",
		3: "BLOCK_ONLY_HIGH",
		4: "BLOCK_NONE",
		5: "OFF",
	}
	SafetySetting_HarmBlockThreshold_value = map[string]int32{
		"HARM_BLOCK_THRESHOLD_UNSPECIFIED": 0,
		"BLOCK_LOW_AND_ABOVE":              1,
		"BLOCK_MEDIUM_AND_ABOVE":           2,
		"BLOCK_ONLY_HIGH":                  3,
		"BLOCK_NONE":                       4,
		"OFF":                              5,
	}
)

func (x SafetySetting_HarmBlockThreshold) Enum() *SafetySetting_HarmBlockThreshold {
	p := new(SafetySetting_HarmBlockThreshold)
	*p = x
	return p
}

func (x SafetySetting_HarmBlockThreshold) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SafetySetting_HarmBlockThreshold) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[6].Descriptor()
}

func (SafetySetting_HarmBlockThreshold) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[6]
}

func (x SafetySetting_HarmBlockThreshold) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SafetySetting_HarmBlockThreshold.Descriptor instead.
func (SafetySetting_HarmBlockThreshold) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{9, 0}
}

// Probability vs severity.
type SafetySetting_HarmBlockMethod int32

const (
	// The harm block method is unspecified.
	SafetySetting_HARM_BLOCK_METHOD_UNSPECIFIED SafetySetting_HarmBlockMethod = 0
	// The harm block method uses both probability and severity scores.
	SafetySetting_SEVERITY SafetySetting_HarmBlockMethod = 1
	// The harm block method uses the probability score.
	SafetySetting_PROBABILITY SafetySetting_HarmBlockMethod = 2
)

// Enum value maps for SafetySetting_HarmBlockMethod.
var (
	SafetySetting_HarmBlockMethod_name = map[int32]string{
		0: "HARM_BLOCK_METHOD_UNSPECIFIED",
		1: "SEVERITY",
		2: "PROBABILITY",
	}
	SafetySetting_HarmBlockMethod_value = map[string]int32{
		"HARM_BLOCK_METHOD_UNSPECIFIED": 0,
		"SEVERITY":                      1,
		"PROBABILITY":                   2,
	}
)

func (x SafetySetting_HarmBlockMethod) Enum() *SafetySetting_HarmBlockMethod {
	p := new(SafetySetting_HarmBlockMethod)
	*p = x
	return p
}

func (x SafetySetting_HarmBlockMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SafetySetting_HarmBlockMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[7].Descriptor()
}

func (SafetySetting_HarmBlockMethod) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[7]
}

func (x SafetySetting_HarmBlockMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SafetySetting_HarmBlockMethod.Descriptor instead.
func (SafetySetting_HarmBlockMethod) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{9, 1}
}

// Harm probability levels in the content.
type SafetyRating_HarmProbability int32

const (
	// Harm probability unspecified.
	SafetyRating_HARM_PROBABILITY_UNSPECIFIED SafetyRating_HarmProbability = 0
	// Negligible level of harm.
	SafetyRating_NEGLIGIBLE SafetyRating_HarmProbability = 1
	// Low level of harm.
	SafetyRating_LOW SafetyRating_HarmProbability = 2
	// Medium level of harm.
	SafetyRating_MEDIUM SafetyRating_HarmProbability = 3
	// High level of harm.
	SafetyRating_HIGH SafetyRating_HarmProbability = 4
)

// Enum value maps for SafetyRating_HarmProbability.
var (
	SafetyRating_HarmProbability_name = map[int32]string{
		0: "HARM_PROBABILITY_UNSPECIFIED",
		1: "NEGLIGIBLE",
		2: "LOW",
		3: "MEDIUM",
		4: "HIGH",
	}
	SafetyRating_HarmProbability_value = map[string]int32{
		"HARM_PROBABILITY_UNSPECIFIED": 0,
		"NEGLIGIBLE":                   1,
		"LOW":                          2,
		"MEDIUM":                       3,
		"HIGH":                         4,
	}
)

func (x SafetyRating_HarmProbability) Enum() *SafetyRating_HarmProbability {
	p := new(SafetyRating_HarmProbability)
	*p = x
	return p
}

func (x SafetyRating_HarmProbability) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SafetyRating_HarmProbability) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[8].Descriptor()
}

func (SafetyRating_HarmProbability) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[8]
}

func (x SafetyRating_HarmProbability) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SafetyRating_HarmProbability.Descriptor instead.
func (SafetyRating_HarmProbability) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{10, 0}
}

// Harm severity levels.
type SafetyRating_HarmSeverity int32

const (
	// Harm severity unspecified.
	SafetyRating_HARM_SEVERITY_UNSPECIFIED SafetyRating_HarmSeverity = 0
	// Negligible level of harm severity.
	SafetyRating_HARM_SEVERITY_NEGLIGIBLE SafetyRating_HarmSeverity = 1
	// Low level of harm severity.
	SafetyRating_HARM_SEVERITY_LOW SafetyRating_HarmSeverity = 2
	// Medium level of harm severity.
	SafetyRating_HARM_SEVERITY_MEDIUM SafetyRating_HarmSeverity = 3
	// High level of harm severity.
	SafetyRating_HARM_SEVERITY_HIGH SafetyRating_HarmSeverity = 4
)

// Enum value maps for SafetyRating_HarmSeverity.
var (
	SafetyRating_HarmSeverity_name = map[int32]string{
		0: "HARM_SEVERITY_UNSPECIFIED",
		1: "HARM_SEVERITY_NEGLIGIBLE",
		2: "HARM_SEVERITY_LOW",
		3: "HARM_SEVERITY_MEDIUM",
		4: "HARM_SEVERITY_HIGH",
	}
	SafetyRating_HarmSeverity_value = map[string]int32{
		"HARM_SEVERITY_UNSPECIFIED": 0,
		"HARM_SEVERITY_NEGLIGIBLE":  1,
		"HARM_SEVERITY_LOW":         2,
		"HARM_SEVERITY_MEDIUM":      3,
		"HARM_SEVERITY_HIGH":        4,
	}
)

func (x SafetyRating_HarmSeverity) Enum() *SafetyRating_HarmSeverity {
	p := new(SafetyRating_HarmSeverity)
	*p = x
	return p
}

func (x SafetyRating_HarmSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SafetyRating_HarmSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[9].Descriptor()
}

func (SafetyRating_HarmSeverity) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[9]
}

func (x SafetyRating_HarmSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SafetyRating_HarmSeverity.Descriptor instead.
func (SafetyRating_HarmSeverity) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{10, 1}
}

// The reason why the model stopped generating tokens.
// If empty, the model has not stopped generating the tokens.
type Candidate_FinishReason int32

const (
	// The finish reason is unspecified.
	Candidate_FINISH_REASON_UNSPECIFIED Candidate_FinishReason = 0
	// Token generation reached a natural stopping point or a configured stop
	// sequence.
	Candidate_STOP Candidate_FinishReason = 1
	// Token generation reached the configured maximum output tokens.
	Candidate_MAX_TOKENS Candidate_FinishReason = 2
	// Token generation stopped because the content potentially contains safety
	// violations. NOTE: When streaming,
	// [content][google.cloud.aiplatform.v1beta1.Candidate.content] is empty if
	// content filters blocks the output.
	Candidate_SAFETY Candidate_FinishReason = 3
	// Token generation stopped because the content potentially contains
	// copyright violations.
	Candidate_RECITATION Candidate_FinishReason = 4
	// All other reasons that stopped the token generation.
	Candidate_OTHER Candidate_FinishReason = 5
	// Token generation stopped because the content contains forbidden terms.
	Candidate_BLOCKLIST Candidate_FinishReason = 6
	// Token generation stopped for potentially containing prohibited content.
	Candidate_PROHIBITED_CONTENT Candidate_FinishReason = 7
	// Token generation stopped because the content potentially contains
	// Sensitive Personally Identifiable Information (SPII).
	Candidate_SPII Candidate_FinishReason = 8
	// The function call generated by the model is invalid.
	Candidate_MALFORMED_FUNCTION_CALL Candidate_FinishReason = 9
)

// Enum value maps for Candidate_FinishReason.
var (
	Candidate_FinishReason_name = map[int32]string{
		0: "FINISH_REASON_UNSPECIFIED",
		1: "STOP",
		2: "MAX_TOKENS",
		3: "SAFETY",
		4: "RECITATION",
		5: "OTHER",
		6: "BLOCKLIST",
		7: "PROHIBITED_CONTENT",
		8: "SPII",
		9: "MALFORMED_FUNCTION_CALL",
	}
	Candidate_FinishReason_value = map[string]int32{
		"FINISH_REASON_UNSPECIFIED": 0,
		"STOP":                      1,
		"MAX_TOKENS":                2,
		"SAFETY":                    3,
		"RECITATION":                4,
		"OTHER":                     5,
		"BLOCKLIST":                 6,
		"PROHIBITED_CONTENT":        7,
		"SPII":                      8,
		"MALFORMED_FUNCTION_CALL":   9,
	}
)

func (x Candidate_FinishReason) Enum() *Candidate_FinishReason {
	p := new(Candidate_FinishReason)
	*p = x
	return p
}

func (x Candidate_FinishReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Candidate_FinishReason) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[10].Descriptor()
}

func (Candidate_FinishReason) Type() protoreflect.EnumType {
	return &file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes[10]
}

func (x Candidate_FinishReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Candidate_FinishReason.Descriptor instead.
func (Candidate_FinishReason) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{13, 0}
}

// The base structured datatype containing multi-part content of a message.
//
// A `Content` includes a `role` field designating the producer of the `Content`
// and a `parts` field containing multi-part data that contains the content of
// the message turn.
type Content struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The producer of the content. Must be either 'user' or 'model'.
	//
	// Useful to set for multi-turn conversations, otherwise can be left blank
	// or unset.
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Required. Ordered `Parts` that constitute a single message. Parts may have
	// different IANA MIME types.
	Parts         []*Part `protobuf:"bytes,2,rep,name=parts,proto3" json:"parts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Content) Reset() {
	*x = Content{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Content) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Content) ProtoMessage() {}

func (x *Content) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Content.ProtoReflect.Descriptor instead.
func (*Content) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{0}
}

func (x *Content) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Content) GetParts() []*Part {
	if x != nil {
		return x.Parts
	}
	return nil
}

// A datatype containing media that is part of a multi-part `Content` message.
//
// A `Part` consists of data which has an associated datatype. A `Part` can only
// contain one of the accepted types in `Part.data`.
//
// A `Part` must have a fixed IANA MIME type identifying the type and subtype
// of the media if `inline_data` or `file_data` field is filled with raw bytes.
type Part struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*Part_Text
	//	*Part_InlineData
	//	*Part_FileData
	//	*Part_FunctionCall
	//	*Part_FunctionResponse
	//	*Part_ExecutableCode
	//	*Part_CodeExecutionResult
	Data isPart_Data `protobuf_oneof:"data"`
	// Types that are valid to be assigned to Metadata:
	//
	//	*Part_VideoMetadata
	Metadata isPart_Metadata `protobuf_oneof:"metadata"`
	// Indicates if the part is thought from the model.
	Thought bool `protobuf:"varint,10,opt,name=thought,proto3" json:"thought,omitempty"`
	// An opaque signature for the thought so it can be reused in subsequent
	// requests.
	ThoughtSignature []byte `protobuf:"bytes,11,opt,name=thought_signature,json=thoughtSignature,proto3" json:"thought_signature,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Part) Reset() {
	*x = Part{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Part) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Part) ProtoMessage() {}

func (x *Part) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Part.ProtoReflect.Descriptor instead.
func (*Part) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{1}
}

func (x *Part) GetData() isPart_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Part) GetText() string {
	if x != nil {
		if x, ok := x.Data.(*Part_Text); ok {
			return x.Text
		}
	}
	return ""
}

func (x *Part) GetInlineData() *Blob {
	if x != nil {
		if x, ok := x.Data.(*Part_InlineData); ok {
			return x.InlineData
		}
	}
	return nil
}

func (x *Part) GetFileData() *FileData {
	if x != nil {
		if x, ok := x.Data.(*Part_FileData); ok {
			return x.FileData
		}
	}
	return nil
}

func (x *Part) GetFunctionCall() *FunctionCall {
	if x != nil {
		if x, ok := x.Data.(*Part_FunctionCall); ok {
			return x.FunctionCall
		}
	}
	return nil
}

func (x *Part) GetFunctionResponse() *FunctionResponse {
	if x != nil {
		if x, ok := x.Data.(*Part_FunctionResponse); ok {
			return x.FunctionResponse
		}
	}
	return nil
}

func (x *Part) GetExecutableCode() *ExecutableCode {
	if x != nil {
		if x, ok := x.Data.(*Part_ExecutableCode); ok {
			return x.ExecutableCode
		}
	}
	return nil
}

func (x *Part) GetCodeExecutionResult() *CodeExecutionResult {
	if x != nil {
		if x, ok := x.Data.(*Part_CodeExecutionResult); ok {
			return x.CodeExecutionResult
		}
	}
	return nil
}

func (x *Part) GetMetadata() isPart_Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Part) GetVideoMetadata() *VideoMetadata {
	if x != nil {
		if x, ok := x.Metadata.(*Part_VideoMetadata); ok {
			return x.VideoMetadata
		}
	}
	return nil
}

func (x *Part) GetThought() bool {
	if x != nil {
		return x.Thought
	}
	return false
}

func (x *Part) GetThoughtSignature() []byte {
	if x != nil {
		return x.ThoughtSignature
	}
	return nil
}

type isPart_Data interface {
	isPart_Data()
}

type Part_Text struct {
	// Optional. Text part (can be code).
	Text string `protobuf:"bytes,1,opt,name=text,proto3,oneof"`
}

type Part_InlineData struct {
	// Optional. Inlined bytes data.
	InlineData *Blob `protobuf:"bytes,2,opt,name=inline_data,json=inlineData,proto3,oneof"`
}

type Part_FileData struct {
	// Optional. URI based data.
	FileData *FileData `protobuf:"bytes,3,opt,name=file_data,json=fileData,proto3,oneof"`
}

type Part_FunctionCall struct {
	// Optional. A predicted [FunctionCall] returned from the model that
	// contains a string representing the [FunctionDeclaration.name] with the
	// parameters and their values.
	FunctionCall *FunctionCall `protobuf:"bytes,5,opt,name=function_call,json=functionCall,proto3,oneof"`
}

type Part_FunctionResponse struct {
	// Optional. The result output of a [FunctionCall] that contains a string
	// representing the [FunctionDeclaration.name] and a structured JSON object
	// containing any output from the function call. It is used as context to
	// the model.
	FunctionResponse *FunctionResponse `protobuf:"bytes,6,opt,name=function_response,json=functionResponse,proto3,oneof"`
}

type Part_ExecutableCode struct {
	// Optional. Code generated by the model that is meant to be executed.
	ExecutableCode *ExecutableCode `protobuf:"bytes,8,opt,name=executable_code,json=executableCode,proto3,oneof"`
}

type Part_CodeExecutionResult struct {
	// Optional. Result of executing the [ExecutableCode].
	CodeExecutionResult *CodeExecutionResult `protobuf:"bytes,9,opt,name=code_execution_result,json=codeExecutionResult,proto3,oneof"`
}

func (*Part_Text) isPart_Data() {}

func (*Part_InlineData) isPart_Data() {}

func (*Part_FileData) isPart_Data() {}

func (*Part_FunctionCall) isPart_Data() {}

func (*Part_FunctionResponse) isPart_Data() {}

func (*Part_ExecutableCode) isPart_Data() {}

func (*Part_CodeExecutionResult) isPart_Data() {}

type isPart_Metadata interface {
	isPart_Metadata()
}

type Part_VideoMetadata struct {
	// Optional. Video metadata. The metadata should only be specified while the
	// video data is presented in inline_data or file_data.
	VideoMetadata *VideoMetadata `protobuf:"bytes,4,opt,name=video_metadata,json=videoMetadata,proto3,oneof"`
}

func (*Part_VideoMetadata) isPart_Metadata() {}

// Content blob.
//
// It's preferred to send as [text][google.cloud.aiplatform.v1beta1.Part.text]
// directly rather than raw bytes.
type Blob struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The IANA standard MIME type of the source data.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Required. Raw bytes.
	Data          []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Blob) Reset() {
	*x = Blob{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{2}
}

func (x *Blob) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Blob) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// URI based data.
type FileData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. The IANA standard MIME type of the source data.
	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	// Required. URI.
	FileUri       string `protobuf:"bytes,2,opt,name=file_uri,json=fileUri,proto3" json:"file_uri,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileData) Reset() {
	*x = FileData{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileData) ProtoMessage() {}

func (x *FileData) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileData.ProtoReflect.Descriptor instead.
func (*FileData) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{3}
}

func (x *FileData) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileData) GetFileUri() string {
	if x != nil {
		return x.FileUri
	}
	return ""
}

// Metadata describes the input video content.
type VideoMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. The start offset of the video.
	StartOffset *durationpb.Duration `protobuf:"bytes,1,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"`
	// Optional. The end offset of the video.
	EndOffset     *durationpb.Duration `protobuf:"bytes,2,opt,name=end_offset,json=endOffset,proto3" json:"end_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VideoMetadata) Reset() {
	*x = VideoMetadata{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VideoMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMetadata) ProtoMessage() {}

func (x *VideoMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMetadata.ProtoReflect.Descriptor instead.
func (*VideoMetadata) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{4}
}

func (x *VideoMetadata) GetStartOffset() *durationpb.Duration {
	if x != nil {
		return x.StartOffset
	}
	return nil
}

func (x *VideoMetadata) GetEndOffset() *durationpb.Duration {
	if x != nil {
		return x.EndOffset
	}
	return nil
}

// The configuration for the prebuilt speaker to use.
type PrebuiltVoiceConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the preset voice to use.
	VoiceName     *string `protobuf:"bytes,1,opt,name=voice_name,json=voiceName,proto3,oneof" json:"voice_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrebuiltVoiceConfig) Reset() {
	*x = PrebuiltVoiceConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrebuiltVoiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrebuiltVoiceConfig) ProtoMessage() {}

func (x *PrebuiltVoiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrebuiltVoiceConfig.ProtoReflect.Descriptor instead.
func (*PrebuiltVoiceConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{5}
}

func (x *PrebuiltVoiceConfig) GetVoiceName() string {
	if x != nil && x.VoiceName != nil {
		return *x.VoiceName
	}
	return ""
}

// The configuration for the voice to use.
type VoiceConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The configuration for the speaker to use.
	//
	// Types that are valid to be assigned to VoiceConfig:
	//
	//	*VoiceConfig_PrebuiltVoiceConfig
	VoiceConfig   isVoiceConfig_VoiceConfig `protobuf_oneof:"voice_config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceConfig) Reset() {
	*x = VoiceConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceConfig) ProtoMessage() {}

func (x *VoiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceConfig.ProtoReflect.Descriptor instead.
func (*VoiceConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{6}
}

func (x *VoiceConfig) GetVoiceConfig() isVoiceConfig_VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

func (x *VoiceConfig) GetPrebuiltVoiceConfig() *PrebuiltVoiceConfig {
	if x != nil {
		if x, ok := x.VoiceConfig.(*VoiceConfig_PrebuiltVoiceConfig); ok {
			return x.PrebuiltVoiceConfig
		}
	}
	return nil
}

type isVoiceConfig_VoiceConfig interface {
	isVoiceConfig_VoiceConfig()
}

type VoiceConfig_PrebuiltVoiceConfig struct {
	// The configuration for the prebuilt voice to use.
	PrebuiltVoiceConfig *PrebuiltVoiceConfig `protobuf:"bytes,1,opt,name=prebuilt_voice_config,json=prebuiltVoiceConfig,proto3,oneof"`
}

func (*VoiceConfig_PrebuiltVoiceConfig) isVoiceConfig_VoiceConfig() {}

// The speech generation config.
type SpeechConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The configuration for the speaker to use.
	VoiceConfig   *VoiceConfig `protobuf:"bytes,1,opt,name=voice_config,json=voiceConfig,proto3" json:"voice_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeechConfig) Reset() {
	*x = SpeechConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeechConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeechConfig) ProtoMessage() {}

func (x *SpeechConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeechConfig.ProtoReflect.Descriptor instead.
func (*SpeechConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{7}
}

func (x *SpeechConfig) GetVoiceConfig() *VoiceConfig {
	if x != nil {
		return x.VoiceConfig
	}
	return nil
}

// Generation config.
type GenerationConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Controls the randomness of predictions.
	Temperature *float32 `protobuf:"fixed32,1,opt,name=temperature,proto3,oneof" json:"temperature,omitempty"`
	// Optional. If specified, nucleus sampling will be used.
	TopP *float32 `protobuf:"fixed32,2,opt,name=top_p,json=topP,proto3,oneof" json:"top_p,omitempty"`
	// Optional. If specified, top-k sampling will be used.
	TopK *float32 `protobuf:"fixed32,3,opt,name=top_k,json=topK,proto3,oneof" json:"top_k,omitempty"`
	// Optional. Number of candidates to generate.
	CandidateCount *int32 `protobuf:"varint,4,opt,name=candidate_count,json=candidateCount,proto3,oneof" json:"candidate_count,omitempty"`
	// Optional. The maximum number of output tokens to generate per message.
	MaxOutputTokens *int32 `protobuf:"varint,5,opt,name=max_output_tokens,json=maxOutputTokens,proto3,oneof" json:"max_output_tokens,omitempty"`
	// Optional. Stop sequences.
	StopSequences []string `protobuf:"bytes,6,rep,name=stop_sequences,json=stopSequences,proto3" json:"stop_sequences,omitempty"`
	// Optional. If true, export the logprobs results in response.
	ResponseLogprobs *bool `protobuf:"varint,18,opt,name=response_logprobs,json=responseLogprobs,proto3,oneof" json:"response_logprobs,omitempty"`
	// Optional. Logit probabilities.
	Logprobs *int32 `protobuf:"varint,7,opt,name=logprobs,proto3,oneof" json:"logprobs,omitempty"`
	// Optional. Positive penalties.
	PresencePenalty *float32 `protobuf:"fixed32,8,opt,name=presence_penalty,json=presencePenalty,proto3,oneof" json:"presence_penalty,omitempty"`
	// Optional. Frequency penalties.
	FrequencyPenalty *float32 `protobuf:"fixed32,9,opt,name=frequency_penalty,json=frequencyPenalty,proto3,oneof" json:"frequency_penalty,omitempty"`
	// Optional. Seed.
	Seed *int32 `protobuf:"varint,12,opt,name=seed,proto3,oneof" json:"seed,omitempty"`
	// Optional. Output response mimetype of the generated candidate text.
	// Supported mimetype:
	// - `text/plain`: (default) Text output.
	// - `application/json`: JSON response in the candidates.
	// The model needs to be prompted to output the appropriate response type,
	// otherwise the behavior is undefined.
	// This is a preview feature.
	ResponseMimeType string `protobuf:"bytes,13,opt,name=response_mime_type,json=responseMimeType,proto3" json:"response_mime_type,omitempty"`
	// Optional. The `Schema` object allows the definition of input and output
	// data types. These types can be objects, but also primitives and arrays.
	// Represents a select subset of an [OpenAPI 3.0 schema
	// object](https://spec.openapis.org/oas/v3.0.3#schema).
	// If set, a compatible response_mime_type must also be set.
	// Compatible mimetypes:
	// `application/json`: Schema for JSON response.
	ResponseSchema *Schema `protobuf:"bytes,16,opt,name=response_schema,json=responseSchema,proto3,oneof" json:"response_schema,omitempty"`
	// Optional. Output schema of the generated response. This is an alternative
	// to `response_schema` that accepts [JSON Schema](https://json-schema.org/).
	//
	// If set, `response_schema` must be omitted, but `response_mime_type` is
	// required.
	//
	// While the full JSON Schema may be sent, not all features are supported.
	// Specifically, only the following properties are supported:
	//
	// - `$id`
	// - `$defs`
	// - `$ref`
	// - `$anchor`
	// - `type`
	// - `format`
	// - `title`
	// - `description`
	// - `enum` (for strings and numbers)
	// - `items`
	// - `prefixItems`
	// - `minItems`
	// - `maxItems`
	// - `minimum`
	// - `maximum`
	// - `anyOf`
	// - `oneOf` (interpreted the same as `anyOf`)
	// - `properties`
	// - `additionalProperties`
	// - `required`
	//
	// The non-standard `propertyOrdering` property may also be set.
	//
	// Cyclic references are unrolled to a limited degree and, as such, may only
	// be used within non-required properties. (Nullable properties are not
	// sufficient.) If `$ref` is set on a sub-schema, no other properties, except
	// for than those starting as a `$`, may be set.
	ResponseJsonSchema *structpb.Value `protobuf:"bytes,28,opt,name=response_json_schema,json=responseJsonSchema,proto3,oneof" json:"response_json_schema,omitempty"`
	// Optional. Routing configuration.
	RoutingConfig *GenerationConfig_RoutingConfig `protobuf:"bytes,17,opt,name=routing_config,json=routingConfig,proto3,oneof" json:"routing_config,omitempty"`
	// Optional. If enabled, audio timestamp will be included in the request to
	// the model.
	AudioTimestamp *bool `protobuf:"varint,20,opt,name=audio_timestamp,json=audioTimestamp,proto3,oneof" json:"audio_timestamp,omitempty"`
	// Optional. The modalities of the response.
	ResponseModalities []GenerationConfig_Modality `protobuf:"varint,21,rep,packed,name=response_modalities,json=responseModalities,proto3,enum=qclaogui.aiplatform.v1beta1.GenerationConfig_Modality" json:"response_modalities,omitempty"`
	// Optional. If specified, the media resolution specified will be used.
	MediaResolution *GenerationConfig_MediaResolution `protobuf:"varint,22,opt,name=media_resolution,json=mediaResolution,proto3,enum=qclaogui.aiplatform.v1beta1.GenerationConfig_MediaResolution,oneof" json:"media_resolution,omitempty"`
	// Optional. The speech generation config.
	SpeechConfig *SpeechConfig `protobuf:"bytes,23,opt,name=speech_config,json=speechConfig,proto3,oneof" json:"speech_config,omitempty"`
	// Optional. Config for thinking features.
	// An error will be returned if this field is set for models that don't
	// support thinking.
	ThinkingConfig *GenerationConfig_ThinkingConfig `protobuf:"bytes,25,opt,name=thinking_config,json=thinkingConfig,proto3" json:"thinking_config,omitempty"`
	// Optional. Config for model selection.
	ModelConfig   *GenerationConfig_ModelConfig `protobuf:"bytes,27,opt,name=model_config,json=modelConfig,proto3" json:"model_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerationConfig) Reset() {
	*x = GenerationConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig) ProtoMessage() {}

func (x *GenerationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig.ProtoReflect.Descriptor instead.
func (*GenerationConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8}
}

func (x *GenerationConfig) GetTemperature() float32 {
	if x != nil && x.Temperature != nil {
		return *x.Temperature
	}
	return 0
}

func (x *GenerationConfig) GetTopP() float32 {
	if x != nil && x.TopP != nil {
		return *x.TopP
	}
	return 0
}

func (x *GenerationConfig) GetTopK() float32 {
	if x != nil && x.TopK != nil {
		return *x.TopK
	}
	return 0
}

func (x *GenerationConfig) GetCandidateCount() int32 {
	if x != nil && x.CandidateCount != nil {
		return *x.CandidateCount
	}
	return 0
}

func (x *GenerationConfig) GetMaxOutputTokens() int32 {
	if x != nil && x.MaxOutputTokens != nil {
		return *x.MaxOutputTokens
	}
	return 0
}

func (x *GenerationConfig) GetStopSequences() []string {
	if x != nil {
		return x.StopSequences
	}
	return nil
}

func (x *GenerationConfig) GetResponseLogprobs() bool {
	if x != nil && x.ResponseLogprobs != nil {
		return *x.ResponseLogprobs
	}
	return false
}

func (x *GenerationConfig) GetLogprobs() int32 {
	if x != nil && x.Logprobs != nil {
		return *x.Logprobs
	}
	return 0
}

func (x *GenerationConfig) GetPresencePenalty() float32 {
	if x != nil && x.PresencePenalty != nil {
		return *x.PresencePenalty
	}
	return 0
}

func (x *GenerationConfig) GetFrequencyPenalty() float32 {
	if x != nil && x.FrequencyPenalty != nil {
		return *x.FrequencyPenalty
	}
	return 0
}

func (x *GenerationConfig) GetSeed() int32 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

func (x *GenerationConfig) GetResponseMimeType() string {
	if x != nil {
		return x.ResponseMimeType
	}
	return ""
}

func (x *GenerationConfig) GetResponseSchema() *Schema {
	if x != nil {
		return x.ResponseSchema
	}
	return nil
}

func (x *GenerationConfig) GetResponseJsonSchema() *structpb.Value {
	if x != nil {
		return x.ResponseJsonSchema
	}
	return nil
}

func (x *GenerationConfig) GetRoutingConfig() *GenerationConfig_RoutingConfig {
	if x != nil {
		return x.RoutingConfig
	}
	return nil
}

func (x *GenerationConfig) GetAudioTimestamp() bool {
	if x != nil && x.AudioTimestamp != nil {
		return *x.AudioTimestamp
	}
	return false
}

func (x *GenerationConfig) GetResponseModalities() []GenerationConfig_Modality {
	if x != nil {
		return x.ResponseModalities
	}
	return nil
}

func (x *GenerationConfig) GetMediaResolution() GenerationConfig_MediaResolution {
	if x != nil && x.MediaResolution != nil {
		return *x.MediaResolution
	}
	return GenerationConfig_MEDIA_RESOLUTION_UNSPECIFIED
}

func (x *GenerationConfig) GetSpeechConfig() *SpeechConfig {
	if x != nil {
		return x.SpeechConfig
	}
	return nil
}

func (x *GenerationConfig) GetThinkingConfig() *GenerationConfig_ThinkingConfig {
	if x != nil {
		return x.ThinkingConfig
	}
	return nil
}

func (x *GenerationConfig) GetModelConfig() *GenerationConfig_ModelConfig {
	if x != nil {
		return x.ModelConfig
	}
	return nil
}

// Safety settings.
type SafetySetting struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Harm category.
	Category HarmCategory `protobuf:"varint,1,opt,name=category,proto3,enum=qclaogui.aiplatform.v1beta1.HarmCategory" json:"category,omitempty"`
	// Required. The harm block threshold.
	Threshold SafetySetting_HarmBlockThreshold `protobuf:"varint,2,opt,name=threshold,proto3,enum=qclaogui.aiplatform.v1beta1.SafetySetting_HarmBlockThreshold" json:"threshold,omitempty"`
	// Optional. Specify if the threshold is used for probability or severity
	// score. If not specified, the threshold is used for probability score.
	Method        SafetySetting_HarmBlockMethod `protobuf:"varint,4,opt,name=method,proto3,enum=qclaogui.aiplatform.v1beta1.SafetySetting_HarmBlockMethod" json:"method,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SafetySetting) Reset() {
	*x = SafetySetting{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SafetySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetySetting) ProtoMessage() {}

func (x *SafetySetting) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetySetting.ProtoReflect.Descriptor instead.
func (*SafetySetting) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{9}
}

func (x *SafetySetting) GetCategory() HarmCategory {
	if x != nil {
		return x.Category
	}
	return HarmCategory_HARM_CATEGORY_UNSPECIFIED
}

func (x *SafetySetting) GetThreshold() SafetySetting_HarmBlockThreshold {
	if x != nil {
		return x.Threshold
	}
	return SafetySetting_HARM_BLOCK_THRESHOLD_UNSPECIFIED
}

func (x *SafetySetting) GetMethod() SafetySetting_HarmBlockMethod {
	if x != nil {
		return x.Method
	}
	return SafetySetting_HARM_BLOCK_METHOD_UNSPECIFIED
}

// Safety rating corresponding to the generated content.
type SafetyRating struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. Harm category.
	Category HarmCategory `protobuf:"varint,1,opt,name=category,proto3,enum=qclaogui.aiplatform.v1beta1.HarmCategory" json:"category,omitempty"`
	// Output only. Harm probability levels in the content.
	Probability SafetyRating_HarmProbability `protobuf:"varint,2,opt,name=probability,proto3,enum=qclaogui.aiplatform.v1beta1.SafetyRating_HarmProbability" json:"probability,omitempty"`
	// Output only. Harm probability score.
	ProbabilityScore float32 `protobuf:"fixed32,5,opt,name=probability_score,json=probabilityScore,proto3" json:"probability_score,omitempty"`
	// Output only. Harm severity levels in the content.
	Severity SafetyRating_HarmSeverity `protobuf:"varint,6,opt,name=severity,proto3,enum=qclaogui.aiplatform.v1beta1.SafetyRating_HarmSeverity" json:"severity,omitempty"`
	// Output only. Harm severity score.
	SeverityScore float32 `protobuf:"fixed32,7,opt,name=severity_score,json=severityScore,proto3" json:"severity_score,omitempty"`
	// Output only. Indicates whether the content was filtered out because of this
	// rating.
	Blocked       bool `protobuf:"varint,3,opt,name=blocked,proto3" json:"blocked,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SafetyRating) Reset() {
	*x = SafetyRating{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SafetyRating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafetyRating) ProtoMessage() {}

func (x *SafetyRating) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafetyRating.ProtoReflect.Descriptor instead.
func (*SafetyRating) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{10}
}

func (x *SafetyRating) GetCategory() HarmCategory {
	if x != nil {
		return x.Category
	}
	return HarmCategory_HARM_CATEGORY_UNSPECIFIED
}

func (x *SafetyRating) GetProbability() SafetyRating_HarmProbability {
	if x != nil {
		return x.Probability
	}
	return SafetyRating_HARM_PROBABILITY_UNSPECIFIED
}

func (x *SafetyRating) GetProbabilityScore() float32 {
	if x != nil {
		return x.ProbabilityScore
	}
	return 0
}

func (x *SafetyRating) GetSeverity() SafetyRating_HarmSeverity {
	if x != nil {
		return x.Severity
	}
	return SafetyRating_HARM_SEVERITY_UNSPECIFIED
}

func (x *SafetyRating) GetSeverityScore() float32 {
	if x != nil {
		return x.SeverityScore
	}
	return 0
}

func (x *SafetyRating) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

// A collection of source attributions for a piece of content.
type CitationMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. List of citations.
	Citations     []*Citation `protobuf:"bytes,1,rep,name=citations,proto3" json:"citations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CitationMetadata) Reset() {
	*x = CitationMetadata{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CitationMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitationMetadata) ProtoMessage() {}

func (x *CitationMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitationMetadata.ProtoReflect.Descriptor instead.
func (*CitationMetadata) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{11}
}

func (x *CitationMetadata) GetCitations() []*Citation {
	if x != nil {
		return x.Citations
	}
	return nil
}

// Source attributions for content.
type Citation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. Start index into the content.
	StartIndex int32 `protobuf:"varint,1,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	// Output only. End index into the content.
	EndIndex int32 `protobuf:"varint,2,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	// Output only. Url reference of the attribution.
	Uri string `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	// Output only. Title of the attribution.
	Title string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	// Output only. License of the attribution.
	License string `protobuf:"bytes,5,opt,name=license,proto3" json:"license,omitempty"`
	// Output only. Publication date of the attribution.
	PublicationDate *date.Date `protobuf:"bytes,6,opt,name=publication_date,json=publicationDate,proto3" json:"publication_date,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Citation) Reset() {
	*x = Citation{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Citation) ProtoMessage() {}

func (x *Citation) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Citation.ProtoReflect.Descriptor instead.
func (*Citation) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{12}
}

func (x *Citation) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *Citation) GetEndIndex() int32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

func (x *Citation) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Citation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Citation) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

func (x *Citation) GetPublicationDate() *date.Date {
	if x != nil {
		return x.PublicationDate
	}
	return nil
}

// A response candidate generated from the model.
type Candidate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. Index of the candidate.
	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	// Output only. Content parts of the candidate.
	Content *Content `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// Output only. Average log probability score of the candidate.
	AvgLogprobs float64 `protobuf:"fixed64,9,opt,name=avg_logprobs,json=avgLogprobs,proto3" json:"avg_logprobs,omitempty"`
	// Output only. Log-likelihood scores for the response tokens and top tokens
	LogprobsResult *LogprobsResult `protobuf:"bytes,10,opt,name=logprobs_result,json=logprobsResult,proto3" json:"logprobs_result,omitempty"`
	// Output only. The reason why the model stopped generating tokens.
	// If empty, the model has not stopped generating the tokens.
	FinishReason Candidate_FinishReason `protobuf:"varint,3,opt,name=finish_reason,json=finishReason,proto3,enum=qclaogui.aiplatform.v1beta1.Candidate_FinishReason" json:"finish_reason,omitempty"`
	// Output only. List of ratings for the safety of a response candidate.
	//
	// There is at most one rating per category.
	SafetyRatings []*SafetyRating `protobuf:"bytes,4,rep,name=safety_ratings,json=safetyRatings,proto3" json:"safety_ratings,omitempty"`
	// Output only. Describes the reason the mode stopped generating tokens in
	// more detail. This is only filled when `finish_reason` is set.
	FinishMessage *string `protobuf:"bytes,5,opt,name=finish_message,json=finishMessage,proto3,oneof" json:"finish_message,omitempty"`
	// Output only. Source attribution of the generated content.
	CitationMetadata *CitationMetadata `protobuf:"bytes,6,opt,name=citation_metadata,json=citationMetadata,proto3" json:"citation_metadata,omitempty"`
	// Output only. Metadata specifies sources used to ground generated content.
	GroundingMetadata *GroundingMetadata `protobuf:"bytes,7,opt,name=grounding_metadata,json=groundingMetadata,proto3" json:"grounding_metadata,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Candidate) Reset() {
	*x = Candidate{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candidate) ProtoMessage() {}

func (x *Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candidate.ProtoReflect.Descriptor instead.
func (*Candidate) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{13}
}

func (x *Candidate) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Candidate) GetContent() *Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Candidate) GetAvgLogprobs() float64 {
	if x != nil {
		return x.AvgLogprobs
	}
	return 0
}

func (x *Candidate) GetLogprobsResult() *LogprobsResult {
	if x != nil {
		return x.LogprobsResult
	}
	return nil
}

func (x *Candidate) GetFinishReason() Candidate_FinishReason {
	if x != nil {
		return x.FinishReason
	}
	return Candidate_FINISH_REASON_UNSPECIFIED
}

func (x *Candidate) GetSafetyRatings() []*SafetyRating {
	if x != nil {
		return x.SafetyRatings
	}
	return nil
}

func (x *Candidate) GetFinishMessage() string {
	if x != nil && x.FinishMessage != nil {
		return *x.FinishMessage
	}
	return ""
}

func (x *Candidate) GetCitationMetadata() *CitationMetadata {
	if x != nil {
		return x.CitationMetadata
	}
	return nil
}

func (x *Candidate) GetGroundingMetadata() *GroundingMetadata {
	if x != nil {
		return x.GroundingMetadata
	}
	return nil
}

// Logprobs Result
type LogprobsResult struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Length = total number of decoding steps.
	TopCandidates []*LogprobsResult_TopCandidates `protobuf:"bytes,1,rep,name=top_candidates,json=topCandidates,proto3" json:"top_candidates,omitempty"`
	// Length = total number of decoding steps.
	// The chosen candidates may or may not be in top_candidates.
	ChosenCandidates []*LogprobsResult_Candidate `protobuf:"bytes,2,rep,name=chosen_candidates,json=chosenCandidates,proto3" json:"chosen_candidates,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LogprobsResult) Reset() {
	*x = LogprobsResult{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogprobsResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogprobsResult) ProtoMessage() {}

func (x *LogprobsResult) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogprobsResult.ProtoReflect.Descriptor instead.
func (*LogprobsResult) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{14}
}

func (x *LogprobsResult) GetTopCandidates() []*LogprobsResult_TopCandidates {
	if x != nil {
		return x.TopCandidates
	}
	return nil
}

func (x *LogprobsResult) GetChosenCandidates() []*LogprobsResult_Candidate {
	if x != nil {
		return x.ChosenCandidates
	}
	return nil
}

// Segment of the content.
type Segment struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Output only. The index of a Part object within its parent Content object.
	PartIndex int32 `protobuf:"varint,1,opt,name=part_index,json=partIndex,proto3" json:"part_index,omitempty"`
	// Output only. Start index in the given Part, measured in bytes. Offset from
	// the start of the Part, inclusive, starting at zero.
	StartIndex int32 `protobuf:"varint,2,opt,name=start_index,json=startIndex,proto3" json:"start_index,omitempty"`
	// Output only. End index in the given Part, measured in bytes. Offset from
	// the start of the Part, exclusive, starting at zero.
	EndIndex int32 `protobuf:"varint,3,opt,name=end_index,json=endIndex,proto3" json:"end_index,omitempty"`
	// Output only. The text corresponding to the segment from the response.
	Text          string `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{15}
}

func (x *Segment) GetPartIndex() int32 {
	if x != nil {
		return x.PartIndex
	}
	return 0
}

func (x *Segment) GetStartIndex() int32 {
	if x != nil {
		return x.StartIndex
	}
	return 0
}

func (x *Segment) GetEndIndex() int32 {
	if x != nil {
		return x.EndIndex
	}
	return 0
}

func (x *Segment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Grounding chunk.
type GroundingChunk struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Chunk type.
	//
	// Types that are valid to be assigned to ChunkType:
	//
	//	*GroundingChunk_Web_
	//	*GroundingChunk_RetrievedContext_
	ChunkType     isGroundingChunk_ChunkType `protobuf_oneof:"chunk_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroundingChunk) Reset() {
	*x = GroundingChunk{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundingChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundingChunk) ProtoMessage() {}

func (x *GroundingChunk) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundingChunk.ProtoReflect.Descriptor instead.
func (*GroundingChunk) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{16}
}

func (x *GroundingChunk) GetChunkType() isGroundingChunk_ChunkType {
	if x != nil {
		return x.ChunkType
	}
	return nil
}

func (x *GroundingChunk) GetWeb() *GroundingChunk_Web {
	if x != nil {
		if x, ok := x.ChunkType.(*GroundingChunk_Web_); ok {
			return x.Web
		}
	}
	return nil
}

func (x *GroundingChunk) GetRetrievedContext() *GroundingChunk_RetrievedContext {
	if x != nil {
		if x, ok := x.ChunkType.(*GroundingChunk_RetrievedContext_); ok {
			return x.RetrievedContext
		}
	}
	return nil
}

type isGroundingChunk_ChunkType interface {
	isGroundingChunk_ChunkType()
}

type GroundingChunk_Web_ struct {
	// Grounding chunk from the web.
	Web *GroundingChunk_Web `protobuf:"bytes,1,opt,name=web,proto3,oneof"`
}

type GroundingChunk_RetrievedContext_ struct {
	// Grounding chunk from context retrieved by the retrieval tools.
	RetrievedContext *GroundingChunk_RetrievedContext `protobuf:"bytes,2,opt,name=retrieved_context,json=retrievedContext,proto3,oneof"`
}

func (*GroundingChunk_Web_) isGroundingChunk_ChunkType() {}

func (*GroundingChunk_RetrievedContext_) isGroundingChunk_ChunkType() {}

// Grounding support.
type GroundingSupport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Segment of the content this support belongs to.
	Segment *Segment `protobuf:"bytes,1,opt,name=segment,proto3,oneof" json:"segment,omitempty"`
	// A list of indices (into 'grounding_chunk') specifying the
	// citations associated with the claim. For instance [1,3,4] means
	// that grounding_chunk[1], grounding_chunk[3],
	// grounding_chunk[4] are the retrieved content attributed to the claim.
	GroundingChunkIndices []int32 `protobuf:"varint,2,rep,packed,name=grounding_chunk_indices,json=groundingChunkIndices,proto3" json:"grounding_chunk_indices,omitempty"`
	// Confidence score of the support references. Ranges from 0 to 1. 1 is the
	// most confident. This list must have the same size as the
	// grounding_chunk_indices.
	ConfidenceScores []float32 `protobuf:"fixed32,3,rep,packed,name=confidence_scores,json=confidenceScores,proto3" json:"confidence_scores,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GroundingSupport) Reset() {
	*x = GroundingSupport{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundingSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundingSupport) ProtoMessage() {}

func (x *GroundingSupport) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundingSupport.ProtoReflect.Descriptor instead.
func (*GroundingSupport) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{17}
}

func (x *GroundingSupport) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *GroundingSupport) GetGroundingChunkIndices() []int32 {
	if x != nil {
		return x.GroundingChunkIndices
	}
	return nil
}

func (x *GroundingSupport) GetConfidenceScores() []float32 {
	if x != nil {
		return x.ConfidenceScores
	}
	return nil
}

// Metadata returned to client when grounding is enabled.
type GroundingMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Web search queries for the following-up web search.
	WebSearchQueries []string `protobuf:"bytes,1,rep,name=web_search_queries,json=webSearchQueries,proto3" json:"web_search_queries,omitempty"`
	// Optional. Google search entry for the following-up web searches.
	SearchEntryPoint *SearchEntryPoint `protobuf:"bytes,4,opt,name=search_entry_point,json=searchEntryPoint,proto3,oneof" json:"search_entry_point,omitempty"`
	// Optional. Queries executed by the retrieval tools.
	RetrievalQueries []string `protobuf:"bytes,3,rep,name=retrieval_queries,json=retrievalQueries,proto3" json:"retrieval_queries,omitempty"`
	// List of supporting references retrieved from specified grounding source.
	GroundingChunks []*GroundingChunk `protobuf:"bytes,5,rep,name=grounding_chunks,json=groundingChunks,proto3" json:"grounding_chunks,omitempty"`
	// Optional. List of grounding support.
	GroundingSupports []*GroundingSupport `protobuf:"bytes,6,rep,name=grounding_supports,json=groundingSupports,proto3" json:"grounding_supports,omitempty"`
	// Optional. Output only. Retrieval metadata.
	RetrievalMetadata *RetrievalMetadata `protobuf:"bytes,7,opt,name=retrieval_metadata,json=retrievalMetadata,proto3,oneof" json:"retrieval_metadata,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GroundingMetadata) Reset() {
	*x = GroundingMetadata{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundingMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundingMetadata) ProtoMessage() {}

func (x *GroundingMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundingMetadata.ProtoReflect.Descriptor instead.
func (*GroundingMetadata) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{18}
}

func (x *GroundingMetadata) GetWebSearchQueries() []string {
	if x != nil {
		return x.WebSearchQueries
	}
	return nil
}

func (x *GroundingMetadata) GetSearchEntryPoint() *SearchEntryPoint {
	if x != nil {
		return x.SearchEntryPoint
	}
	return nil
}

func (x *GroundingMetadata) GetRetrievalQueries() []string {
	if x != nil {
		return x.RetrievalQueries
	}
	return nil
}

func (x *GroundingMetadata) GetGroundingChunks() []*GroundingChunk {
	if x != nil {
		return x.GroundingChunks
	}
	return nil
}

func (x *GroundingMetadata) GetGroundingSupports() []*GroundingSupport {
	if x != nil {
		return x.GroundingSupports
	}
	return nil
}

func (x *GroundingMetadata) GetRetrievalMetadata() *RetrievalMetadata {
	if x != nil {
		return x.RetrievalMetadata
	}
	return nil
}

// Google search entry point.
type SearchEntryPoint struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Web content snippet that can be embedded in a web page or an app
	// webview.
	RenderedContent string `protobuf:"bytes,1,opt,name=rendered_content,json=renderedContent,proto3" json:"rendered_content,omitempty"`
	// Optional. Base64 encoded JSON representing array of <search term, search
	// url> tuple.
	SdkBlob       []byte `protobuf:"bytes,2,opt,name=sdk_blob,json=sdkBlob,proto3" json:"sdk_blob,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchEntryPoint) Reset() {
	*x = SearchEntryPoint{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchEntryPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchEntryPoint) ProtoMessage() {}

func (x *SearchEntryPoint) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchEntryPoint.ProtoReflect.Descriptor instead.
func (*SearchEntryPoint) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{19}
}

func (x *SearchEntryPoint) GetRenderedContent() string {
	if x != nil {
		return x.RenderedContent
	}
	return ""
}

func (x *SearchEntryPoint) GetSdkBlob() []byte {
	if x != nil {
		return x.SdkBlob
	}
	return nil
}

// Metadata related to retrieval in the grounding flow.
type RetrievalMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional. Score indicating how likely information from Google Search could
	// help answer the prompt. The score is in the range `[0, 1]`, where 0 is the
	// least likely and 1 is the most likely. This score is only populated when
	// Google Search grounding and dynamic retrieval is enabled. It will be
	// compared to the threshold to determine whether to trigger Google Search.
	GoogleSearchDynamicRetrievalScore float32 `protobuf:"fixed32,2,opt,name=google_search_dynamic_retrieval_score,json=googleSearchDynamicRetrievalScore,proto3" json:"google_search_dynamic_retrieval_score,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *RetrievalMetadata) Reset() {
	*x = RetrievalMetadata{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrievalMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievalMetadata) ProtoMessage() {}

func (x *RetrievalMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievalMetadata.ProtoReflect.Descriptor instead.
func (*RetrievalMetadata) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{20}
}

func (x *RetrievalMetadata) GetGoogleSearchDynamicRetrievalScore() float32 {
	if x != nil {
		return x.GoogleSearchDynamicRetrievalScore
	}
	return 0
}

// Represents token counting info for a single modality.
type ModalityTokenCount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The modality associated with this token count.
	Modality Modality `protobuf:"varint,1,opt,name=modality,proto3,enum=qclaogui.aiplatform.v1beta1.Modality" json:"modality,omitempty"`
	// Number of tokens.
	TokenCount    int32 `protobuf:"varint,2,opt,name=token_count,json=tokenCount,proto3" json:"token_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ModalityTokenCount) Reset() {
	*x = ModalityTokenCount{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModalityTokenCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModalityTokenCount) ProtoMessage() {}

func (x *ModalityTokenCount) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModalityTokenCount.ProtoReflect.Descriptor instead.
func (*ModalityTokenCount) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{21}
}

func (x *ModalityTokenCount) GetModality() Modality {
	if x != nil {
		return x.Modality
	}
	return Modality_MODALITY_UNSPECIFIED
}

func (x *ModalityTokenCount) GetTokenCount() int32 {
	if x != nil {
		return x.TokenCount
	}
	return 0
}

// The configuration for routing the request to a specific model.
type GenerationConfig_RoutingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Routing mode.
	//
	// Types that are valid to be assigned to RoutingConfig:
	//
	//	*GenerationConfig_RoutingConfig_AutoMode
	//	*GenerationConfig_RoutingConfig_ManualMode
	RoutingConfig isGenerationConfig_RoutingConfig_RoutingConfig `protobuf_oneof:"routing_config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerationConfig_RoutingConfig) Reset() {
	*x = GenerationConfig_RoutingConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig_RoutingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig_RoutingConfig) ProtoMessage() {}

func (x *GenerationConfig_RoutingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig_RoutingConfig.ProtoReflect.Descriptor instead.
func (*GenerationConfig_RoutingConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 0}
}

func (x *GenerationConfig_RoutingConfig) GetRoutingConfig() isGenerationConfig_RoutingConfig_RoutingConfig {
	if x != nil {
		return x.RoutingConfig
	}
	return nil
}

func (x *GenerationConfig_RoutingConfig) GetAutoMode() *GenerationConfig_RoutingConfig_AutoRoutingMode {
	if x != nil {
		if x, ok := x.RoutingConfig.(*GenerationConfig_RoutingConfig_AutoMode); ok {
			return x.AutoMode
		}
	}
	return nil
}

func (x *GenerationConfig_RoutingConfig) GetManualMode() *GenerationConfig_RoutingConfig_ManualRoutingMode {
	if x != nil {
		if x, ok := x.RoutingConfig.(*GenerationConfig_RoutingConfig_ManualMode); ok {
			return x.ManualMode
		}
	}
	return nil
}

type isGenerationConfig_RoutingConfig_RoutingConfig interface {
	isGenerationConfig_RoutingConfig_RoutingConfig()
}

type GenerationConfig_RoutingConfig_AutoMode struct {
	// Automated routing.
	AutoMode *GenerationConfig_RoutingConfig_AutoRoutingMode `protobuf:"bytes,1,opt,name=auto_mode,json=autoMode,proto3,oneof"`
}

type GenerationConfig_RoutingConfig_ManualMode struct {
	// Manual routing.
	ManualMode *GenerationConfig_RoutingConfig_ManualRoutingMode `protobuf:"bytes,2,opt,name=manual_mode,json=manualMode,proto3,oneof"`
}

func (*GenerationConfig_RoutingConfig_AutoMode) isGenerationConfig_RoutingConfig_RoutingConfig() {}

func (*GenerationConfig_RoutingConfig_ManualMode) isGenerationConfig_RoutingConfig_RoutingConfig() {}

// Config for thinking features.
type GenerationConfig_ThinkingConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Indicates whether to include thoughts in the response.
	// If true, thoughts are returned only when available.
	IncludeThoughts *bool `protobuf:"varint,1,opt,name=include_thoughts,json=includeThoughts,proto3,oneof" json:"include_thoughts,omitempty"`
	// Optional. Indicates the thinking budget in tokens.
	// This is only applied when enable_thinking is true.
	ThinkingBudget *int32 `protobuf:"varint,3,opt,name=thinking_budget,json=thinkingBudget,proto3,oneof" json:"thinking_budget,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GenerationConfig_ThinkingConfig) Reset() {
	*x = GenerationConfig_ThinkingConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig_ThinkingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig_ThinkingConfig) ProtoMessage() {}

func (x *GenerationConfig_ThinkingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig_ThinkingConfig.ProtoReflect.Descriptor instead.
func (*GenerationConfig_ThinkingConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 1}
}

func (x *GenerationConfig_ThinkingConfig) GetIncludeThoughts() bool {
	if x != nil && x.IncludeThoughts != nil {
		return *x.IncludeThoughts
	}
	return false
}

func (x *GenerationConfig_ThinkingConfig) GetThinkingBudget() int32 {
	if x != nil && x.ThinkingBudget != nil {
		return *x.ThinkingBudget
	}
	return 0
}

// Config for model selection.
type GenerationConfig_ModelConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Required. Feature selection preference.
	FeatureSelectionPreference GenerationConfig_ModelConfig_FeatureSelectionPreference `protobuf:"varint,1,opt,name=feature_selection_preference,json=featureSelectionPreference,proto3,enum=qclaogui.aiplatform.v1beta1.GenerationConfig_ModelConfig_FeatureSelectionPreference" json:"feature_selection_preference,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *GenerationConfig_ModelConfig) Reset() {
	*x = GenerationConfig_ModelConfig{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig_ModelConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig_ModelConfig) ProtoMessage() {}

func (x *GenerationConfig_ModelConfig) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig_ModelConfig.ProtoReflect.Descriptor instead.
func (*GenerationConfig_ModelConfig) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 2}
}

func (x *GenerationConfig_ModelConfig) GetFeatureSelectionPreference() GenerationConfig_ModelConfig_FeatureSelectionPreference {
	if x != nil {
		return x.FeatureSelectionPreference
	}
	return GenerationConfig_ModelConfig_FEATURE_SELECTION_PREFERENCE_UNSPECIFIED
}

// When automated routing is specified, the routing will be determined by
// the pretrained routing model and customer provided model routing
// preference.
type GenerationConfig_RoutingConfig_AutoRoutingMode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The model routing preference.
	ModelRoutingPreference *GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference `protobuf:"varint,1,opt,name=model_routing_preference,json=modelRoutingPreference,proto3,enum=qclaogui.aiplatform.v1beta1.GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference,oneof" json:"model_routing_preference,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GenerationConfig_RoutingConfig_AutoRoutingMode) Reset() {
	*x = GenerationConfig_RoutingConfig_AutoRoutingMode{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig_RoutingConfig_AutoRoutingMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig_RoutingConfig_AutoRoutingMode) ProtoMessage() {}

func (x *GenerationConfig_RoutingConfig_AutoRoutingMode) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig_RoutingConfig_AutoRoutingMode.ProtoReflect.Descriptor instead.
func (*GenerationConfig_RoutingConfig_AutoRoutingMode) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *GenerationConfig_RoutingConfig_AutoRoutingMode) GetModelRoutingPreference() GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference {
	if x != nil && x.ModelRoutingPreference != nil {
		return *x.ModelRoutingPreference
	}
	return GenerationConfig_RoutingConfig_AutoRoutingMode_UNKNOWN
}

// When manual routing is set, the specified model will be used directly.
type GenerationConfig_RoutingConfig_ManualRoutingMode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The model name to use. Only the public LLM models are accepted. e.g.
	// 'gemini-1.5-pro-001'.
	ModelName     *string `protobuf:"bytes,1,opt,name=model_name,json=modelName,proto3,oneof" json:"model_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerationConfig_RoutingConfig_ManualRoutingMode) Reset() {
	*x = GenerationConfig_RoutingConfig_ManualRoutingMode{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerationConfig_RoutingConfig_ManualRoutingMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerationConfig_RoutingConfig_ManualRoutingMode) ProtoMessage() {}

func (x *GenerationConfig_RoutingConfig_ManualRoutingMode) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerationConfig_RoutingConfig_ManualRoutingMode.ProtoReflect.Descriptor instead.
func (*GenerationConfig_RoutingConfig_ManualRoutingMode) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{8, 0, 1}
}

func (x *GenerationConfig_RoutingConfig_ManualRoutingMode) GetModelName() string {
	if x != nil && x.ModelName != nil {
		return *x.ModelName
	}
	return ""
}

// Candidate for the logprobs token and score.
type LogprobsResult_Candidate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The candidate’s token string value.
	Token *string `protobuf:"bytes,1,opt,name=token,proto3,oneof" json:"token,omitempty"`
	// The candidate’s token id value.
	TokenId *int32 `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3,oneof" json:"token_id,omitempty"`
	// The candidate's log probability.
	LogProbability *float32 `protobuf:"fixed32,2,opt,name=log_probability,json=logProbability,proto3,oneof" json:"log_probability,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LogprobsResult_Candidate) Reset() {
	*x = LogprobsResult_Candidate{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogprobsResult_Candidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogprobsResult_Candidate) ProtoMessage() {}

func (x *LogprobsResult_Candidate) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogprobsResult_Candidate.ProtoReflect.Descriptor instead.
func (*LogprobsResult_Candidate) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{14, 0}
}

func (x *LogprobsResult_Candidate) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *LogprobsResult_Candidate) GetTokenId() int32 {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return 0
}

func (x *LogprobsResult_Candidate) GetLogProbability() float32 {
	if x != nil && x.LogProbability != nil {
		return *x.LogProbability
	}
	return 0
}

// Candidates with top log probabilities at each decoding step.
type LogprobsResult_TopCandidates struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Sorted by log probability in descending order.
	Candidates    []*LogprobsResult_Candidate `protobuf:"bytes,1,rep,name=candidates,proto3" json:"candidates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogprobsResult_TopCandidates) Reset() {
	*x = LogprobsResult_TopCandidates{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogprobsResult_TopCandidates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogprobsResult_TopCandidates) ProtoMessage() {}

func (x *LogprobsResult_TopCandidates) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogprobsResult_TopCandidates.ProtoReflect.Descriptor instead.
func (*LogprobsResult_TopCandidates) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{14, 1}
}

func (x *LogprobsResult_TopCandidates) GetCandidates() []*LogprobsResult_Candidate {
	if x != nil {
		return x.Candidates
	}
	return nil
}

// Chunk from the web.
type GroundingChunk_Web struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// URI reference of the chunk.
	Uri *string `protobuf:"bytes,1,opt,name=uri,proto3,oneof" json:"uri,omitempty"`
	// Title of the chunk.
	Title         *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroundingChunk_Web) Reset() {
	*x = GroundingChunk_Web{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundingChunk_Web) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundingChunk_Web) ProtoMessage() {}

func (x *GroundingChunk_Web) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundingChunk_Web.ProtoReflect.Descriptor instead.
func (*GroundingChunk_Web) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{16, 0}
}

func (x *GroundingChunk_Web) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *GroundingChunk_Web) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

// Chunk from context retrieved by the retrieval tools.
type GroundingChunk_RetrievedContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Tool-specific details about the retrieved context.
	//
	// Types that are valid to be assigned to ContextDetails:
	//
	//	*GroundingChunk_RetrievedContext_RagChunk
	ContextDetails isGroundingChunk_RetrievedContext_ContextDetails `protobuf_oneof:"context_details"`
	// URI reference of the attribution.
	Uri *string `protobuf:"bytes,1,opt,name=uri,proto3,oneof" json:"uri,omitempty"`
	// Title of the attribution.
	Title *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	// Text of the attribution.
	Text          *string `protobuf:"bytes,3,opt,name=text,proto3,oneof" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroundingChunk_RetrievedContext) Reset() {
	*x = GroundingChunk_RetrievedContext{}
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundingChunk_RetrievedContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundingChunk_RetrievedContext) ProtoMessage() {}

func (x *GroundingChunk_RetrievedContext) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundingChunk_RetrievedContext.ProtoReflect.Descriptor instead.
func (*GroundingChunk_RetrievedContext) Descriptor() ([]byte, []int) {
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP(), []int{16, 1}
}

func (x *GroundingChunk_RetrievedContext) GetContextDetails() isGroundingChunk_RetrievedContext_ContextDetails {
	if x != nil {
		return x.ContextDetails
	}
	return nil
}

func (x *GroundingChunk_RetrievedContext) GetRagChunk() *RagChunk {
	if x != nil {
		if x, ok := x.ContextDetails.(*GroundingChunk_RetrievedContext_RagChunk); ok {
			return x.RagChunk
		}
	}
	return nil
}

func (x *GroundingChunk_RetrievedContext) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *GroundingChunk_RetrievedContext) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *GroundingChunk_RetrievedContext) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type isGroundingChunk_RetrievedContext_ContextDetails interface {
	isGroundingChunk_RetrievedContext_ContextDetails()
}

type GroundingChunk_RetrievedContext_RagChunk struct {
	// Additional context for the RAG retrieval result. This is only populated
	// when using the RAG retrieval tool.
	RagChunk *RagChunk `protobuf:"bytes,4,opt,name=rag_chunk,json=ragChunk,proto3,oneof"`
}

func (*GroundingChunk_RetrievedContext_RagChunk) isGroundingChunk_RetrievedContext_ContextDetails() {}

var File_qclaogui_aiplatform_v1beta1_content_proto protoreflect.FileDescriptor

const file_qclaogui_aiplatform_v1beta1_content_proto_rawDesc = "" +
	"\n" +
	")qclaogui/aiplatform/v1beta1/content.proto\x12\x1bqclaogui.aiplatform.v1beta1\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x16google/type/date.proto\x1a)qclaogui/aiplatform/v1beta1/openapi.proto\x1a&qclaogui/aiplatform/v1beta1/tool.proto\x1a1qclaogui/aiplatform/v1beta1/vertex_rag_data.proto\"b\n" +
	"\aContent\x12\x18\n" +
	"\x04role\x18\x01 \x01(\tB\x04\xe2A\x01\x01R\x04role\x12=\n" +
	"\x05parts\x18\x02 \x03(\v2!.qclaogui.aiplatform.v1beta1.PartB\x04\xe2A\x01\x02R\x05parts\"\x84\x06\n" +
	"\x04Part\x12\x1a\n" +
	"\x04text\x18\x01 \x01(\tB\x04\xe2A\x01\x01H\x00R\x04text\x12J\n" +
	"\vinline_data\x18\x02 \x01(\v2!.qclaogui.aiplatform.v1beta1.BlobB\x04\xe2A\x01\x01H\x00R\n" +
	"inlineData\x12J\n" +
	"\tfile_data\x18\x03 \x01(\v2%.qclaogui.aiplatform.v1beta1.FileDataB\x04\xe2A\x01\x01H\x00R\bfileData\x12V\n" +
	"\rfunction_call\x18\x05 \x01(\v2).qclaogui.aiplatform.v1beta1.FunctionCallB\x04\xe2A\x01\x01H\x00R\ffunctionCall\x12b\n" +
	"\x11function_response\x18\x06 \x01(\v2-.qclaogui.aiplatform.v1beta1.FunctionResponseB\x04\xe2A\x01\x01H\x00R\x10functionResponse\x12\\\n" +
	"\x0fexecutable_code\x18\b \x01(\v2+.qclaogui.aiplatform.v1beta1.ExecutableCodeB\x04\xe2A\x01\x01H\x00R\x0eexecutableCode\x12l\n" +
	"\x15code_execution_result\x18\t \x01(\v20.qclaogui.aiplatform.v1beta1.CodeExecutionResultB\x04\xe2A\x01\x01H\x00R\x13codeExecutionResult\x12Y\n" +
	"\x0evideo_metadata\x18\x04 \x01(\v2*.qclaogui.aiplatform.v1beta1.VideoMetadataB\x04\xe2A\x01\x01H\x01R\rvideoMetadata\x12\x1e\n" +
	"\athought\x18\n" +
	" \x01(\bB\x04\xe2A\x01\x01R\athought\x121\n" +
	"\x11thought_signature\x18\v \x01(\fB\x04\xe2A\x01\x01R\x10thoughtSignatureB\x06\n" +
	"\x04dataB\n" +
	"\n" +
	"\bmetadata\"C\n" +
	"\x04Blob\x12!\n" +
	"\tmime_type\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\bmimeType\x12\x18\n" +
	"\x04data\x18\x02 \x01(\fB\x04\xe2A\x01\x02R\x04data\"N\n" +
	"\bFileData\x12!\n" +
	"\tmime_type\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\bmimeType\x12\x1f\n" +
	"\bfile_uri\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\afileUri\"\x93\x01\n" +
	"\rVideoMetadata\x12B\n" +
	"\fstart_offset\x18\x01 \x01(\v2\x19.google.protobuf.DurationB\x04\xe2A\x01\x01R\vstartOffset\x12>\n" +
	"\n" +
	"end_offset\x18\x02 \x01(\v2\x19.google.protobuf.DurationB\x04\xe2A\x01\x01R\tendOffset\"H\n" +
	"\x13PrebuiltVoiceConfig\x12\"\n" +
	"\n" +
	"voice_name\x18\x01 \x01(\tH\x00R\tvoiceName\x88\x01\x01B\r\n" +
	"\v_voice_name\"\x85\x01\n" +
	"\vVoiceConfig\x12f\n" +
	"\x15prebuilt_voice_config\x18\x01 \x01(\v20.qclaogui.aiplatform.v1beta1.PrebuiltVoiceConfigH\x00R\x13prebuiltVoiceConfigB\x0e\n" +
	"\fvoice_config\"[\n" +
	"\fSpeechConfig\x12K\n" +
	"\fvoice_config\x18\x01 \x01(\v2(.qclaogui.aiplatform.v1beta1.VoiceConfigR\vvoiceConfig\"\xe4\x17\n" +
	"\x10GenerationConfig\x12+\n" +
	"\vtemperature\x18\x01 \x01(\x02B\x04\xe2A\x01\x01H\x00R\vtemperature\x88\x01\x01\x12\x1e\n" +
	"\x05top_p\x18\x02 \x01(\x02B\x04\xe2A\x01\x01H\x01R\x04topP\x88\x01\x01\x12\x1e\n" +
	"\x05top_k\x18\x03 \x01(\x02B\x04\xe2A\x01\x01H\x02R\x04topK\x88\x01\x01\x122\n" +
	"\x0fcandidate_count\x18\x04 \x01(\x05B\x04\xe2A\x01\x01H\x03R\x0ecandidateCount\x88\x01\x01\x125\n" +
	"\x11max_output_tokens\x18\x05 \x01(\x05B\x04\xe2A\x01\x01H\x04R\x0fmaxOutputTokens\x88\x01\x01\x12+\n" +
	"\x0estop_sequences\x18\x06 \x03(\tB\x04\xe2A\x01\x01R\rstopSequences\x126\n" +
	"\x11response_logprobs\x18\x12 \x01(\bB\x04\xe2A\x01\x01H\x05R\x10responseLogprobs\x88\x01\x01\x12%\n" +
	"\blogprobs\x18\a \x01(\x05B\x04\xe2A\x01\x01H\x06R\blogprobs\x88\x01\x01\x124\n" +
	"\x10presence_penalty\x18\b \x01(\x02B\x04\xe2A\x01\x01H\aR\x0fpresencePenalty\x88\x01\x01\x126\n" +
	"\x11frequency_penalty\x18\t \x01(\x02B\x04\xe2A\x01\x01H\bR\x10frequencyPenalty\x88\x01\x01\x12\x1d\n" +
	"\x04seed\x18\f \x01(\x05B\x04\xe2A\x01\x01H\tR\x04seed\x88\x01\x01\x122\n" +
	"\x12response_mime_type\x18\r \x01(\tB\x04\xe2A\x01\x01R\x10responseMimeType\x12W\n" +
	"\x0fresponse_schema\x18\x10 \x01(\v2#.qclaogui.aiplatform.v1beta1.SchemaB\x04\xe2A\x01\x01H\n" +
	"R\x0eresponseSchema\x88\x01\x01\x12S\n" +
	"\x14response_json_schema\x18\x1c \x01(\v2\x16.google.protobuf.ValueB\x04\xe2A\x01\x01H\vR\x12responseJsonSchema\x88\x01\x01\x12m\n" +
	"\x0erouting_config\x18\x11 \x01(\v2;.qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfigB\x04\xe2A\x01\x01H\fR\rroutingConfig\x88\x01\x01\x122\n" +
	"\x0faudio_timestamp\x18\x14 \x01(\bB\x04\xe2A\x01\x01H\rR\x0eaudioTimestamp\x88\x01\x01\x12m\n" +
	"\x13response_modalities\x18\x15 \x03(\x0e26.qclaogui.aiplatform.v1beta1.GenerationConfig.ModalityB\x04\xe2A\x01\x01R\x12responseModalities\x12s\n" +
	"\x10media_resolution\x18\x16 \x01(\x0e2=.qclaogui.aiplatform.v1beta1.GenerationConfig.MediaResolutionB\x04\xe2A\x01\x01H\x0eR\x0fmediaResolution\x88\x01\x01\x12Y\n" +
	"\rspeech_config\x18\x17 \x01(\v2).qclaogui.aiplatform.v1beta1.SpeechConfigB\x04\xe2A\x01\x01H\x0fR\fspeechConfig\x88\x01\x01\x12k\n" +
	"\x0fthinking_config\x18\x19 \x01(\v2<.qclaogui.aiplatform.v1beta1.GenerationConfig.ThinkingConfigB\x04\xe2A\x01\x01R\x0ethinkingConfig\x12b\n" +
	"\fmodel_config\x18\x1b \x01(\v29.qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfigB\x04\xe2A\x01\x01R\vmodelConfig\x1a\xfe\x04\n" +
	"\rRoutingConfig\x12j\n" +
	"\tauto_mode\x18\x01 \x01(\v2K.qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingModeH\x00R\bautoMode\x12p\n" +
	"\vmanual_mode\x18\x02 \x01(\v2M.qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingModeH\x00R\n" +
	"manualMode\x1a\xb4\x02\n" +
	"\x0fAutoRoutingMode\x12\xa1\x01\n" +
	"\x18model_routing_preference\x18\x01 \x01(\x0e2b.qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreferenceH\x00R\x16modelRoutingPreference\x88\x01\x01\"`\n" +
	"\x16ModelRoutingPreference\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\x16\n" +
	"\x12PRIORITIZE_QUALITY\x10\x01\x12\f\n" +
	"\bBALANCED\x10\x02\x12\x13\n" +
	"\x0fPRIORITIZE_COST\x10\x03B\x1b\n" +
	"\x19_model_routing_preference\x1aF\n" +
	"\x11ManualRoutingMode\x12\"\n" +
	"\n" +
	"model_name\x18\x01 \x01(\tH\x00R\tmodelName\x88\x01\x01B\r\n" +
	"\v_model_nameB\x10\n" +
	"\x0erouting_config\x1a\xa3\x01\n" +
	"\x0eThinkingConfig\x124\n" +
	"\x10include_thoughts\x18\x01 \x01(\bB\x04\xe2A\x01\x01H\x00R\x0fincludeThoughts\x88\x01\x01\x122\n" +
	"\x0fthinking_budget\x18\x03 \x01(\x05B\x04\xe2A\x01\x01H\x01R\x0ethinkingBudget\x88\x01\x01B\x13\n" +
	"\x11_include_thoughtsB\x12\n" +
	"\x10_thinking_budget\x1a\xb4\x02\n" +
	"\vModelConfig\x12\x9c\x01\n" +
	"\x1cfeature_selection_preference\x18\x01 \x01(\x0e2T.qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig.FeatureSelectionPreferenceB\x04\xe2A\x01\x02R\x1afeatureSelectionPreference\"\x85\x01\n" +
	"\x1aFeatureSelectionPreference\x12,\n" +
	"(FEATURE_SELECTION_PREFERENCE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12PRIORITIZE_QUALITY\x10\x01\x12\f\n" +
	"\bBALANCED\x10\x02\x12\x13\n" +
	"\x0fPRIORITIZE_COST\x10\x03\"D\n" +
	"\bModality\x12\x18\n" +
	"\x14MODALITY_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04TEXT\x10\x01\x12\t\n" +
	"\x05IMAGE\x10\x02\x12\t\n" +
	"\x05AUDIO\x10\x03\"\x85\x01\n" +
	"\x0fMediaResolution\x12 \n" +
	"\x1cMEDIA_RESOLUTION_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MEDIA_RESOLUTION_LOW\x10\x01\x12\x1b\n" +
	"\x17MEDIA_RESOLUTION_MEDIUM\x10\x02\x12\x19\n" +
	"\x15MEDIA_RESOLUTION_HIGH\x10\x03B\x0e\n" +
	"\f_temperatureB\b\n" +
	"\x06_top_pB\b\n" +
	"\x06_top_kB\x12\n" +
	"\x10_candidate_countB\x14\n" +
	"\x12_max_output_tokensB\x14\n" +
	"\x12_response_logprobsB\v\n" +
	"\t_logprobsB\x13\n" +
	"\x11_presence_penaltyB\x14\n" +
	"\x12_frequency_penaltyB\a\n" +
	"\x05_seedB\x12\n" +
	"\x10_response_schemaB\x17\n" +
	"\x15_response_json_schemaB\x11\n" +
	"\x0f_routing_configB\x12\n" +
	"\x10_audio_timestampB\x13\n" +
	"\x11_media_resolutionB\x10\n" +
	"\x0e_speech_config\"\x8e\x04\n" +
	"\rSafetySetting\x12K\n" +
	"\bcategory\x18\x01 \x01(\x0e2).qclaogui.aiplatform.v1beta1.HarmCategoryB\x04\xe2A\x01\x02R\bcategory\x12a\n" +
	"\tthreshold\x18\x02 \x01(\x0e2=.qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockThresholdB\x04\xe2A\x01\x02R\tthreshold\x12X\n" +
	"\x06method\x18\x04 \x01(\x0e2:.qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockMethodB\x04\xe2A\x01\x01R\x06method\"\x9d\x01\n" +
	"\x12HarmBlockThreshold\x12$\n" +
	" HARM_BLOCK_THRESHOLD_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13BLOCK_LOW_AND_ABOVE\x10\x01\x12\x1a\n" +
	"\x16BLOCK_MEDIUM_AND_ABOVE\x10\x02\x12\x13\n" +
	"\x0fBLOCK_ONLY_HIGH\x10\x03\x12\x0e\n" +
	"\n" +
	"BLOCK_NONE\x10\x04\x12\a\n" +
	"\x03OFF\x10\x05\"S\n" +
	"\x0fHarmBlockMethod\x12!\n" +
	"\x1dHARM_BLOCK_METHOD_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bSEVERITY\x10\x01\x12\x0f\n" +
	"\vPROBABILITY\x10\x02\"\x93\x05\n" +
	"\fSafetyRating\x12K\n" +
	"\bcategory\x18\x01 \x01(\x0e2).qclaogui.aiplatform.v1beta1.HarmCategoryB\x04\xe2A\x01\x03R\bcategory\x12a\n" +
	"\vprobability\x18\x02 \x01(\x0e29.qclaogui.aiplatform.v1beta1.SafetyRating.HarmProbabilityB\x04\xe2A\x01\x03R\vprobability\x121\n" +
	"\x11probability_score\x18\x05 \x01(\x02B\x04\xe2A\x01\x03R\x10probabilityScore\x12X\n" +
	"\bseverity\x18\x06 \x01(\x0e26.qclaogui.aiplatform.v1beta1.SafetyRating.HarmSeverityB\x04\xe2A\x01\x03R\bseverity\x12+\n" +
	"\x0eseverity_score\x18\a \x01(\x02B\x04\xe2A\x01\x03R\rseverityScore\x12\x1e\n" +
	"\ablocked\x18\x03 \x01(\bB\x04\xe2A\x01\x03R\ablocked\"b\n" +
	"\x0fHarmProbability\x12 \n" +
	"\x1cHARM_PROBABILITY_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"NEGLIGIBLE\x10\x01\x12\a\n" +
	"\x03LOW\x10\x02\x12\n" +
	"\n" +
	"\x06MEDIUM\x10\x03\x12\b\n" +
	"\x04HIGH\x10\x04\"\x94\x01\n" +
	"\fHarmSeverity\x12\x1d\n" +
	"\x19HARM_SEVERITY_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18HARM_SEVERITY_NEGLIGIBLE\x10\x01\x12\x15\n" +
	"\x11HARM_SEVERITY_LOW\x10\x02\x12\x18\n" +
	"\x14HARM_SEVERITY_MEDIUM\x10\x03\x12\x16\n" +
	"\x12HARM_SEVERITY_HIGH\x10\x04\"]\n" +
	"\x10CitationMetadata\x12I\n" +
	"\tcitations\x18\x01 \x03(\v2%.qclaogui.aiplatform.v1beta1.CitationB\x04\xe2A\x01\x03R\tcitations\"\xec\x01\n" +
	"\bCitation\x12%\n" +
	"\vstart_index\x18\x01 \x01(\x05B\x04\xe2A\x01\x03R\n" +
	"startIndex\x12!\n" +
	"\tend_index\x18\x02 \x01(\x05B\x04\xe2A\x01\x03R\bendIndex\x12\x16\n" +
	"\x03uri\x18\x03 \x01(\tB\x04\xe2A\x01\x03R\x03uri\x12\x1a\n" +
	"\x05title\x18\x04 \x01(\tB\x04\xe2A\x01\x03R\x05title\x12\x1e\n" +
	"\alicense\x18\x05 \x01(\tB\x04\xe2A\x01\x03R\alicense\x12B\n" +
	"\x10publication_date\x18\x06 \x01(\v2\x11.google.type.DateB\x04\xe2A\x01\x03R\x0fpublicationDate\"\xf5\x06\n" +
	"\tCandidate\x12\x1a\n" +
	"\x05index\x18\x01 \x01(\x05B\x04\xe2A\x01\x03R\x05index\x12D\n" +
	"\acontent\x18\x02 \x01(\v2$.qclaogui.aiplatform.v1beta1.ContentB\x04\xe2A\x01\x03R\acontent\x12'\n" +
	"\favg_logprobs\x18\t \x01(\x01B\x04\xe2A\x01\x03R\vavgLogprobs\x12Z\n" +
	"\x0flogprobs_result\x18\n" +
	" \x01(\v2+.qclaogui.aiplatform.v1beta1.LogprobsResultB\x04\xe2A\x01\x03R\x0elogprobsResult\x12^\n" +
	"\rfinish_reason\x18\x03 \x01(\x0e23.qclaogui.aiplatform.v1beta1.Candidate.FinishReasonB\x04\xe2A\x01\x03R\ffinishReason\x12V\n" +
	"\x0esafety_ratings\x18\x04 \x03(\v2).qclaogui.aiplatform.v1beta1.SafetyRatingB\x04\xe2A\x01\x03R\rsafetyRatings\x120\n" +
	"\x0efinish_message\x18\x05 \x01(\tB\x04\xe2A\x01\x03H\x00R\rfinishMessage\x88\x01\x01\x12`\n" +
	"\x11citation_metadata\x18\x06 \x01(\v2-.qclaogui.aiplatform.v1beta1.CitationMetadataB\x04\xe2A\x01\x03R\x10citationMetadata\x12c\n" +
	"\x12grounding_metadata\x18\a \x01(\v2..qclaogui.aiplatform.v1beta1.GroundingMetadataB\x04\xe2A\x01\x03R\x11groundingMetadata\"\xbc\x01\n" +
	"\fFinishReason\x12\x1d\n" +
	"\x19FINISH_REASON_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04STOP\x10\x01\x12\x0e\n" +
	"\n" +
	"MAX_TOKENS\x10\x02\x12\n" +
	"\n" +
	"\x06SAFETY\x10\x03\x12\x0e\n" +
	"\n" +
	"RECITATION\x10\x04\x12\t\n" +
	"\x05OTHER\x10\x05\x12\r\n" +
	"\tBLOCKLIST\x10\x06\x12\x16\n" +
	"\x12PROHIBITED_CONTENT\x10\a\x12\b\n" +
	"\x04SPII\x10\b\x12\x1b\n" +
	"\x17MALFORMED_FUNCTION_CALL\x10\tB\x11\n" +
	"\x0f_finish_message\"\xe0\x03\n" +
	"\x0eLogprobsResult\x12`\n" +
	"\x0etop_candidates\x18\x01 \x03(\v29.qclaogui.aiplatform.v1beta1.LogprobsResult.TopCandidatesR\rtopCandidates\x12b\n" +
	"\x11chosen_candidates\x18\x02 \x03(\v25.qclaogui.aiplatform.v1beta1.LogprobsResult.CandidateR\x10chosenCandidates\x1a\x9f\x01\n" +
	"\tCandidate\x12\x19\n" +
	"\x05token\x18\x01 \x01(\tH\x00R\x05token\x88\x01\x01\x12\x1e\n" +
	"\btoken_id\x18\x03 \x01(\x05H\x01R\atokenId\x88\x01\x01\x12,\n" +
	"\x0flog_probability\x18\x02 \x01(\x02H\x02R\x0elogProbability\x88\x01\x01B\b\n" +
	"\x06_tokenB\v\n" +
	"\t_token_idB\x12\n" +
	"\x10_log_probability\x1af\n" +
	"\rTopCandidates\x12U\n" +
	"\n" +
	"candidates\x18\x01 \x03(\v25.qclaogui.aiplatform.v1beta1.LogprobsResult.CandidateR\n" +
	"candidates\"\x92\x01\n" +
	"\aSegment\x12#\n" +
	"\n" +
	"part_index\x18\x01 \x01(\x05B\x04\xe2A\x01\x03R\tpartIndex\x12%\n" +
	"\vstart_index\x18\x02 \x01(\x05B\x04\xe2A\x01\x03R\n" +
	"startIndex\x12!\n" +
	"\tend_index\x18\x03 \x01(\x05B\x04\xe2A\x01\x03R\bendIndex\x12\x18\n" +
	"\x04text\x18\x04 \x01(\tB\x04\xe2A\x01\x03R\x04text\"\xef\x03\n" +
	"\x0eGroundingChunk\x12C\n" +
	"\x03web\x18\x01 \x01(\v2/.qclaogui.aiplatform.v1beta1.GroundingChunk.WebH\x00R\x03web\x12k\n" +
	"\x11retrieved_context\x18\x02 \x01(\v2<.qclaogui.aiplatform.v1beta1.GroundingChunk.RetrievedContextH\x00R\x10retrievedContext\x1aI\n" +
	"\x03Web\x12\x15\n" +
	"\x03uri\x18\x01 \x01(\tH\x00R\x03uri\x88\x01\x01\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x01R\x05title\x88\x01\x01B\x06\n" +
	"\x04_uriB\b\n" +
	"\x06_title\x1a\xd1\x01\n" +
	"\x10RetrievedContext\x12D\n" +
	"\trag_chunk\x18\x04 \x01(\v2%.qclaogui.aiplatform.v1beta1.RagChunkH\x00R\bragChunk\x12\x15\n" +
	"\x03uri\x18\x01 \x01(\tH\x01R\x03uri\x88\x01\x01\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x02R\x05title\x88\x01\x01\x12\x17\n" +
	"\x04text\x18\x03 \x01(\tH\x03R\x04text\x88\x01\x01B\x11\n" +
	"\x0fcontext_detailsB\x06\n" +
	"\x04_uriB\b\n" +
	"\x06_titleB\a\n" +
	"\x05_textB\f\n" +
	"\n" +
	"chunk_type\"\xc8\x01\n" +
	"\x10GroundingSupport\x12C\n" +
	"\asegment\x18\x01 \x01(\v2$.qclaogui.aiplatform.v1beta1.SegmentH\x00R\asegment\x88\x01\x01\x126\n" +
	"\x17grounding_chunk_indices\x18\x02 \x03(\x05R\x15groundingChunkIndices\x12+\n" +
	"\x11confidence_scores\x18\x03 \x03(\x02R\x10confidenceScoresB\n" +
	"\n" +
	"\b_segment\"\xb7\x04\n" +
	"\x11GroundingMetadata\x122\n" +
	"\x12web_search_queries\x18\x01 \x03(\tB\x04\xe2A\x01\x01R\x10webSearchQueries\x12f\n" +
	"\x12search_entry_point\x18\x04 \x01(\v2-.qclaogui.aiplatform.v1beta1.SearchEntryPointB\x04\xe2A\x01\x01H\x00R\x10searchEntryPoint\x88\x01\x01\x121\n" +
	"\x11retrieval_queries\x18\x03 \x03(\tB\x04\xe2A\x01\x01R\x10retrievalQueries\x12V\n" +
	"\x10grounding_chunks\x18\x05 \x03(\v2+.qclaogui.aiplatform.v1beta1.GroundingChunkR\x0fgroundingChunks\x12b\n" +
	"\x12grounding_supports\x18\x06 \x03(\v2-.qclaogui.aiplatform.v1beta1.GroundingSupportB\x04\xe2A\x01\x01R\x11groundingSupports\x12i\n" +
	"\x12retrieval_metadata\x18\a \x01(\v2..qclaogui.aiplatform.v1beta1.RetrievalMetadataB\x05\xe2A\x02\x01\x03H\x01R\x11retrievalMetadata\x88\x01\x01B\x15\n" +
	"\x13_search_entry_pointB\x15\n" +
	"\x13_retrieval_metadata\"d\n" +
	"\x10SearchEntryPoint\x12/\n" +
	"\x10rendered_content\x18\x01 \x01(\tB\x04\xe2A\x01\x01R\x0frenderedContent\x12\x1f\n" +
	"\bsdk_blob\x18\x02 \x01(\fB\x04\xe2A\x01\x01R\asdkBlob\"k\n" +
	"\x11RetrievalMetadata\x12V\n" +
	"%google_search_dynamic_retrieval_score\x18\x02 \x01(\x02B\x04\xe2A\x01\x01R!googleSearchDynamicRetrievalScore\"x\n" +
	"\x12ModalityTokenCount\x12A\n" +
	"\bmodality\x18\x01 \x01(\x0e2%.qclaogui.aiplatform.v1beta1.ModalityR\bmodality\x12\x1f\n" +
	"\vtoken_count\x18\x02 \x01(\x05R\n" +
	"tokenCount*\xdb\x01\n" +
	"\fHarmCategory\x12\x1d\n" +
	"\x19HARM_CATEGORY_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19HARM_CATEGORY_HATE_SPEECH\x10\x01\x12#\n" +
	"\x1fHARM_CATEGORY_DANGEROUS_CONTENT\x10\x02\x12\x1c\n" +
	"\x18HARM_CATEGORY_HARASSMENT\x10\x03\x12#\n" +
	"\x1fHARM_CATEGORY_SEXUALLY_EXPLICIT\x10\x04\x12%\n" +
	"\x1dHARM_CATEGORY_CIVIC_INTEGRITY\x10\x05\x1a\x02\b\x01*]\n" +
	"\bModality\x12\x18\n" +
	"\x14MODALITY_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04TEXT\x10\x01\x12\t\n" +
	"\x05IMAGE\x10\x02\x12\t\n" +
	"\x05VIDEO\x10\x03\x12\t\n" +
	"\x05AUDIO\x10\x04\x12\f\n" +
	"\bDOCUMENT\x10\x05BFZDgithub.com/qclaogui/gaip/genproto/aiplatform/apiv1beta1/aiplatformpbb\x06proto3"

var (
	file_qclaogui_aiplatform_v1beta1_content_proto_rawDescOnce sync.Once
	file_qclaogui_aiplatform_v1beta1_content_proto_rawDescData []byte
)

func file_qclaogui_aiplatform_v1beta1_content_proto_rawDescGZIP() []byte {
	file_qclaogui_aiplatform_v1beta1_content_proto_rawDescOnce.Do(func() {
		file_qclaogui_aiplatform_v1beta1_content_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_qclaogui_aiplatform_v1beta1_content_proto_rawDesc), len(file_qclaogui_aiplatform_v1beta1_content_proto_rawDesc)))
	})
	return file_qclaogui_aiplatform_v1beta1_content_proto_rawDescData
}

var (
	file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes  = make([]protoimpl.MessageInfo, 31)
	file_qclaogui_aiplatform_v1beta1_content_proto_goTypes   = []any{
		(HarmCategory)(0),                     // 0: qclaogui.aiplatform.v1beta1.HarmCategory
		(Modality)(0),                         // 1: qclaogui.aiplatform.v1beta1.Modality
		(GenerationConfig_Modality)(0),        // 2: qclaogui.aiplatform.v1beta1.GenerationConfig.Modality
		(GenerationConfig_MediaResolution)(0), // 3: qclaogui.aiplatform.v1beta1.GenerationConfig.MediaResolution
		(GenerationConfig_RoutingConfig_AutoRoutingMode_ModelRoutingPreference)(0), // 4: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreference
		(GenerationConfig_ModelConfig_FeatureSelectionPreference)(0),               // 5: qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig.FeatureSelectionPreference
		(SafetySetting_HarmBlockThreshold)(0),                                      // 6: qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockThreshold
		(SafetySetting_HarmBlockMethod)(0),                                         // 7: qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockMethod
		(SafetyRating_HarmProbability)(0),                                          // 8: qclaogui.aiplatform.v1beta1.SafetyRating.HarmProbability
		(SafetyRating_HarmSeverity)(0),                                             // 9: qclaogui.aiplatform.v1beta1.SafetyRating.HarmSeverity
		(Candidate_FinishReason)(0),                                                // 10: qclaogui.aiplatform.v1beta1.Candidate.FinishReason
		(*Content)(nil),                                                            // 11: qclaogui.aiplatform.v1beta1.Content
		(*Part)(nil),                                                               // 12: qclaogui.aiplatform.v1beta1.Part
		(*Blob)(nil),                                                               // 13: qclaogui.aiplatform.v1beta1.Blob
		(*FileData)(nil),                                                           // 14: qclaogui.aiplatform.v1beta1.FileData
		(*VideoMetadata)(nil),                                                      // 15: qclaogui.aiplatform.v1beta1.VideoMetadata
		(*PrebuiltVoiceConfig)(nil),                                                // 16: qclaogui.aiplatform.v1beta1.PrebuiltVoiceConfig
		(*VoiceConfig)(nil),                                                        // 17: qclaogui.aiplatform.v1beta1.VoiceConfig
		(*SpeechConfig)(nil),                                                       // 18: qclaogui.aiplatform.v1beta1.SpeechConfig
		(*GenerationConfig)(nil),                                                   // 19: qclaogui.aiplatform.v1beta1.GenerationConfig
		(*SafetySetting)(nil),                                                      // 20: qclaogui.aiplatform.v1beta1.SafetySetting
		(*SafetyRating)(nil),                                                       // 21: qclaogui.aiplatform.v1beta1.SafetyRating
		(*CitationMetadata)(nil),                                                   // 22: qclaogui.aiplatform.v1beta1.CitationMetadata
		(*Citation)(nil),                                                           // 23: qclaogui.aiplatform.v1beta1.Citation
		(*Candidate)(nil),                                                          // 24: qclaogui.aiplatform.v1beta1.Candidate
		(*LogprobsResult)(nil),                                                     // 25: qclaogui.aiplatform.v1beta1.LogprobsResult
		(*Segment)(nil),                                                            // 26: qclaogui.aiplatform.v1beta1.Segment
		(*GroundingChunk)(nil),                                                     // 27: qclaogui.aiplatform.v1beta1.GroundingChunk
		(*GroundingSupport)(nil),                                                   // 28: qclaogui.aiplatform.v1beta1.GroundingSupport
		(*GroundingMetadata)(nil),                                                  // 29: qclaogui.aiplatform.v1beta1.GroundingMetadata
		(*SearchEntryPoint)(nil),                                                   // 30: qclaogui.aiplatform.v1beta1.SearchEntryPoint
		(*RetrievalMetadata)(nil),                                                  // 31: qclaogui.aiplatform.v1beta1.RetrievalMetadata
		(*ModalityTokenCount)(nil),                                                 // 32: qclaogui.aiplatform.v1beta1.ModalityTokenCount
		(*GenerationConfig_RoutingConfig)(nil),                                     // 33: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig
		(*GenerationConfig_ThinkingConfig)(nil),                                    // 34: qclaogui.aiplatform.v1beta1.GenerationConfig.ThinkingConfig
		(*GenerationConfig_ModelConfig)(nil),                                       // 35: qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig
		(*GenerationConfig_RoutingConfig_AutoRoutingMode)(nil),                     // 36: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode
		(*GenerationConfig_RoutingConfig_ManualRoutingMode)(nil),                   // 37: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode
		(*LogprobsResult_Candidate)(nil),                                           // 38: qclaogui.aiplatform.v1beta1.LogprobsResult.Candidate
		(*LogprobsResult_TopCandidates)(nil),                                       // 39: qclaogui.aiplatform.v1beta1.LogprobsResult.TopCandidates
		(*GroundingChunk_Web)(nil),                                                 // 40: qclaogui.aiplatform.v1beta1.GroundingChunk.Web
		(*GroundingChunk_RetrievedContext)(nil),                                    // 41: qclaogui.aiplatform.v1beta1.GroundingChunk.RetrievedContext
		(*FunctionCall)(nil),                                                       // 42: qclaogui.aiplatform.v1beta1.FunctionCall
		(*FunctionResponse)(nil),                                                   // 43: qclaogui.aiplatform.v1beta1.FunctionResponse
		(*ExecutableCode)(nil),                                                     // 44: qclaogui.aiplatform.v1beta1.ExecutableCode
		(*CodeExecutionResult)(nil),                                                // 45: qclaogui.aiplatform.v1beta1.CodeExecutionResult
		(*durationpb.Duration)(nil),                                                // 46: google.protobuf.Duration
		(*Schema)(nil),                                                             // 47: qclaogui.aiplatform.v1beta1.Schema
		(*structpb.Value)(nil),                                                     // 48: google.protobuf.Value
		(*date.Date)(nil),                                                          // 49: google.type.Date
		(*RagChunk)(nil),                                                           // 50: qclaogui.aiplatform.v1beta1.RagChunk
	}
)

var file_qclaogui_aiplatform_v1beta1_content_proto_depIdxs = []int32{
	12, // 0: qclaogui.aiplatform.v1beta1.Content.parts:type_name -> qclaogui.aiplatform.v1beta1.Part
	13, // 1: qclaogui.aiplatform.v1beta1.Part.inline_data:type_name -> qclaogui.aiplatform.v1beta1.Blob
	14, // 2: qclaogui.aiplatform.v1beta1.Part.file_data:type_name -> qclaogui.aiplatform.v1beta1.FileData
	42, // 3: qclaogui.aiplatform.v1beta1.Part.function_call:type_name -> qclaogui.aiplatform.v1beta1.FunctionCall
	43, // 4: qclaogui.aiplatform.v1beta1.Part.function_response:type_name -> qclaogui.aiplatform.v1beta1.FunctionResponse
	44, // 5: qclaogui.aiplatform.v1beta1.Part.executable_code:type_name -> qclaogui.aiplatform.v1beta1.ExecutableCode
	45, // 6: qclaogui.aiplatform.v1beta1.Part.code_execution_result:type_name -> qclaogui.aiplatform.v1beta1.CodeExecutionResult
	15, // 7: qclaogui.aiplatform.v1beta1.Part.video_metadata:type_name -> qclaogui.aiplatform.v1beta1.VideoMetadata
	46, // 8: qclaogui.aiplatform.v1beta1.VideoMetadata.start_offset:type_name -> google.protobuf.Duration
	46, // 9: qclaogui.aiplatform.v1beta1.VideoMetadata.end_offset:type_name -> google.protobuf.Duration
	16, // 10: qclaogui.aiplatform.v1beta1.VoiceConfig.prebuilt_voice_config:type_name -> qclaogui.aiplatform.v1beta1.PrebuiltVoiceConfig
	17, // 11: qclaogui.aiplatform.v1beta1.SpeechConfig.voice_config:type_name -> qclaogui.aiplatform.v1beta1.VoiceConfig
	47, // 12: qclaogui.aiplatform.v1beta1.GenerationConfig.response_schema:type_name -> qclaogui.aiplatform.v1beta1.Schema
	48, // 13: qclaogui.aiplatform.v1beta1.GenerationConfig.response_json_schema:type_name -> google.protobuf.Value
	33, // 14: qclaogui.aiplatform.v1beta1.GenerationConfig.routing_config:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig
	2,  // 15: qclaogui.aiplatform.v1beta1.GenerationConfig.response_modalities:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.Modality
	3,  // 16: qclaogui.aiplatform.v1beta1.GenerationConfig.media_resolution:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.MediaResolution
	18, // 17: qclaogui.aiplatform.v1beta1.GenerationConfig.speech_config:type_name -> qclaogui.aiplatform.v1beta1.SpeechConfig
	34, // 18: qclaogui.aiplatform.v1beta1.GenerationConfig.thinking_config:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.ThinkingConfig
	35, // 19: qclaogui.aiplatform.v1beta1.GenerationConfig.model_config:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig
	0,  // 20: qclaogui.aiplatform.v1beta1.SafetySetting.category:type_name -> qclaogui.aiplatform.v1beta1.HarmCategory
	6,  // 21: qclaogui.aiplatform.v1beta1.SafetySetting.threshold:type_name -> qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockThreshold
	7,  // 22: qclaogui.aiplatform.v1beta1.SafetySetting.method:type_name -> qclaogui.aiplatform.v1beta1.SafetySetting.HarmBlockMethod
	0,  // 23: qclaogui.aiplatform.v1beta1.SafetyRating.category:type_name -> qclaogui.aiplatform.v1beta1.HarmCategory
	8,  // 24: qclaogui.aiplatform.v1beta1.SafetyRating.probability:type_name -> qclaogui.aiplatform.v1beta1.SafetyRating.HarmProbability
	9,  // 25: qclaogui.aiplatform.v1beta1.SafetyRating.severity:type_name -> qclaogui.aiplatform.v1beta1.SafetyRating.HarmSeverity
	23, // 26: qclaogui.aiplatform.v1beta1.CitationMetadata.citations:type_name -> qclaogui.aiplatform.v1beta1.Citation
	49, // 27: qclaogui.aiplatform.v1beta1.Citation.publication_date:type_name -> google.type.Date
	11, // 28: qclaogui.aiplatform.v1beta1.Candidate.content:type_name -> qclaogui.aiplatform.v1beta1.Content
	25, // 29: qclaogui.aiplatform.v1beta1.Candidate.logprobs_result:type_name -> qclaogui.aiplatform.v1beta1.LogprobsResult
	10, // 30: qclaogui.aiplatform.v1beta1.Candidate.finish_reason:type_name -> qclaogui.aiplatform.v1beta1.Candidate.FinishReason
	21, // 31: qclaogui.aiplatform.v1beta1.Candidate.safety_ratings:type_name -> qclaogui.aiplatform.v1beta1.SafetyRating
	22, // 32: qclaogui.aiplatform.v1beta1.Candidate.citation_metadata:type_name -> qclaogui.aiplatform.v1beta1.CitationMetadata
	29, // 33: qclaogui.aiplatform.v1beta1.Candidate.grounding_metadata:type_name -> qclaogui.aiplatform.v1beta1.GroundingMetadata
	39, // 34: qclaogui.aiplatform.v1beta1.LogprobsResult.top_candidates:type_name -> qclaogui.aiplatform.v1beta1.LogprobsResult.TopCandidates
	38, // 35: qclaogui.aiplatform.v1beta1.LogprobsResult.chosen_candidates:type_name -> qclaogui.aiplatform.v1beta1.LogprobsResult.Candidate
	40, // 36: qclaogui.aiplatform.v1beta1.GroundingChunk.web:type_name -> qclaogui.aiplatform.v1beta1.GroundingChunk.Web
	41, // 37: qclaogui.aiplatform.v1beta1.GroundingChunk.retrieved_context:type_name -> qclaogui.aiplatform.v1beta1.GroundingChunk.RetrievedContext
	26, // 38: qclaogui.aiplatform.v1beta1.GroundingSupport.segment:type_name -> qclaogui.aiplatform.v1beta1.Segment
	30, // 39: qclaogui.aiplatform.v1beta1.GroundingMetadata.search_entry_point:type_name -> qclaogui.aiplatform.v1beta1.SearchEntryPoint
	27, // 40: qclaogui.aiplatform.v1beta1.GroundingMetadata.grounding_chunks:type_name -> qclaogui.aiplatform.v1beta1.GroundingChunk
	28, // 41: qclaogui.aiplatform.v1beta1.GroundingMetadata.grounding_supports:type_name -> qclaogui.aiplatform.v1beta1.GroundingSupport
	31, // 42: qclaogui.aiplatform.v1beta1.GroundingMetadata.retrieval_metadata:type_name -> qclaogui.aiplatform.v1beta1.RetrievalMetadata
	1,  // 43: qclaogui.aiplatform.v1beta1.ModalityTokenCount.modality:type_name -> qclaogui.aiplatform.v1beta1.Modality
	36, // 44: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.auto_mode:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode
	37, // 45: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.manual_mode:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.ManualRoutingMode
	5,  // 46: qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig.feature_selection_preference:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.ModelConfig.FeatureSelectionPreference
	4,  // 47: qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.model_routing_preference:type_name -> qclaogui.aiplatform.v1beta1.GenerationConfig.RoutingConfig.AutoRoutingMode.ModelRoutingPreference
	38, // 48: qclaogui.aiplatform.v1beta1.LogprobsResult.TopCandidates.candidates:type_name -> qclaogui.aiplatform.v1beta1.LogprobsResult.Candidate
	50, // 49: qclaogui.aiplatform.v1beta1.GroundingChunk.RetrievedContext.rag_chunk:type_name -> qclaogui.aiplatform.v1beta1.RagChunk
	50, // [50:50] is the sub-list for method output_type
	50, // [50:50] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_qclaogui_aiplatform_v1beta1_content_proto_init() }
func file_qclaogui_aiplatform_v1beta1_content_proto_init() {
	if File_qclaogui_aiplatform_v1beta1_content_proto != nil {
		return
	}
	file_qclaogui_aiplatform_v1beta1_openapi_proto_init()
	file_qclaogui_aiplatform_v1beta1_tool_proto_init()
	file_qclaogui_aiplatform_v1beta1_vertex_rag_data_proto_init()
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[1].OneofWrappers = []any{
		(*Part_Text)(nil),
		(*Part_InlineData)(nil),
		(*Part_FileData)(nil),
		(*Part_FunctionCall)(nil),
		(*Part_FunctionResponse)(nil),
		(*Part_ExecutableCode)(nil),
		(*Part_CodeExecutionResult)(nil),
		(*Part_VideoMetadata)(nil),
	}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[5].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[6].OneofWrappers = []any{
		(*VoiceConfig_PrebuiltVoiceConfig)(nil),
	}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[8].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[13].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[16].OneofWrappers = []any{
		(*GroundingChunk_Web_)(nil),
		(*GroundingChunk_RetrievedContext_)(nil),
	}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[17].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[18].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[22].OneofWrappers = []any{
		(*GenerationConfig_RoutingConfig_AutoMode)(nil),
		(*GenerationConfig_RoutingConfig_ManualMode)(nil),
	}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[23].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[25].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[26].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[27].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[29].OneofWrappers = []any{}
	file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes[30].OneofWrappers = []any{
		(*GroundingChunk_RetrievedContext_RagChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_qclaogui_aiplatform_v1beta1_content_proto_rawDesc), len(file_qclaogui_aiplatform_v1beta1_content_proto_rawDesc)),
			NumEnums:      11,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qclaogui_aiplatform_v1beta1_content_proto_goTypes,
		DependencyIndexes: file_qclaogui_aiplatform_v1beta1_content_proto_depIdxs,
		EnumInfos:         file_qclaogui_aiplatform_v1beta1_content_proto_enumTypes,
		MessageInfos:      file_qclaogui_aiplatform_v1beta1_content_proto_msgTypes,
	}.Build()
	File_qclaogui_aiplatform_v1beta1_content_proto = out.File
	file_qclaogui_aiplatform_v1beta1_content_proto_goTypes = nil
	file_qclaogui_aiplatform_v1beta1_content_proto_depIdxs = nil
}
