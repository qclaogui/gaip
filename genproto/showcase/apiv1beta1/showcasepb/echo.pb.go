// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: qclaogui/showcase/v1beta1/echo.proto

package showcasepb

import (
	reflect "reflect"
	sync "sync"

	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// a severity enum used to test enum capabilities in gapic surfaces.
type Severity int32

const (
	Severity_SEVERITY_UNSPECIFIED Severity = 0
	Severity_SEVERITY_UNNECESSARY Severity = 1
	Severity_SEVERITY_NECESSARY   Severity = 2
	Severity_SEVERITY_URGENT      Severity = 3
	Severity_SEVERITY_CRITICAL    Severity = 4
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_UNSPECIFIED",
		1: "SEVERITY_UNNECESSARY",
		2: "SEVERITY_NECESSARY",
		3: "SEVERITY_URGENT",
		4: "SEVERITY_CRITICAL",
	}
	Severity_value = map[string]int32{
		"SEVERITY_UNSPECIFIED": 0,
		"SEVERITY_UNNECESSARY": 1,
		"SEVERITY_NECESSARY":   2,
		"SEVERITY_URGENT":      3,
		"SEVERITY_CRITICAL":    4,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_qclaogui_showcase_v1beta1_echo_proto_enumTypes[0].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_qclaogui_showcase_v1beta1_echo_proto_enumTypes[0]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{0}
}

// The request message used for the Echo, Collect and Chat methods.
// If content or opt are set in this message then the request will succeed.
// If status is set in this message then the status will be returned as an
// error.
type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*EchoRequest_Content
	//	*EchoRequest_Error
	Response isEchoRequest_Response `protobuf_oneof:"response"`
	// The severity to be echoed by the server.
	Severity Severity `protobuf:"varint,3,opt,name=severity,proto3,enum=qclaogui.showcase.v1beta1.Severity" json:"severity,omitempty"`
	// Optional. This field can be set to test the routing annotation on the Echo method.
	Header string `protobuf:"bytes,4,opt,name=header,proto3" json:"header,omitempty"`
	// Optional. This field can be set to test the routing annotation on the Echo method.
	OtherHeader string `protobuf:"bytes,5,opt,name=other_header,json=otherHeader,proto3" json:"other_header,omitempty"`
	RequestId   string `protobuf:"bytes,7,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{0}
}

func (m *EchoRequest) GetResponse() isEchoRequest_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *EchoRequest) GetContent() string {
	if x, ok := x.GetResponse().(*EchoRequest_Content); ok {
		return x.Content
	}
	return ""
}

func (x *EchoRequest) GetError() *status.Status {
	if x, ok := x.GetResponse().(*EchoRequest_Error); ok {
		return x.Error
	}
	return nil
}

func (x *EchoRequest) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *EchoRequest) GetHeader() string {
	if x != nil {
		return x.Header
	}
	return ""
}

func (x *EchoRequest) GetOtherHeader() string {
	if x != nil {
		return x.OtherHeader
	}
	return ""
}

func (x *EchoRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type isEchoRequest_Response interface {
	isEchoRequest_Response()
}

type EchoRequest_Content struct {
	// The content to be echoed by the server.
	Content string `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type EchoRequest_Error struct {
	// The error to be thrown by the server.
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

func (*EchoRequest_Content) isEchoRequest_Response() {}

func (*EchoRequest_Error) isEchoRequest_Response() {}

// The response message for the Echo methods.
type EchoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content specified in the request.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The severity specified in the request.
	Severity Severity `protobuf:"varint,2,opt,name=severity,proto3,enum=qclaogui.showcase.v1beta1.Severity" json:"severity,omitempty"`
	// The request ID specified or autopopulated in the request.
	RequestId string `protobuf:"bytes,3,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
}

func (x *EchoResponse) Reset() {
	*x = EchoResponse{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoResponse) ProtoMessage() {}

func (x *EchoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoResponse.ProtoReflect.Descriptor instead.
func (*EchoResponse) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{1}
}

func (x *EchoResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *EchoResponse) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_UNSPECIFIED
}

func (x *EchoResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

// The request message used for the EchoErrorDetails method.
type EchoErrorDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Content to return in a singular `*.error.details` field of type
	// `google.protobuf.Any`
	SingleDetailText string `protobuf:"bytes,1,opt,name=single_detail_text,json=singleDetailText,proto3" json:"single_detail_text,omitempty"`
	// Content to return in a repeated `*.error.details` field of type
	// `google.protobuf.Any`
	MultiDetailText []string `protobuf:"bytes,2,rep,name=multi_detail_text,json=multiDetailText,proto3" json:"multi_detail_text,omitempty"`
}

func (x *EchoErrorDetailsRequest) Reset() {
	*x = EchoErrorDetailsRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoErrorDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoErrorDetailsRequest) ProtoMessage() {}

func (x *EchoErrorDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoErrorDetailsRequest.ProtoReflect.Descriptor instead.
func (*EchoErrorDetailsRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{2}
}

func (x *EchoErrorDetailsRequest) GetSingleDetailText() string {
	if x != nil {
		return x.SingleDetailText
	}
	return ""
}

func (x *EchoErrorDetailsRequest) GetMultiDetailText() []string {
	if x != nil {
		return x.MultiDetailText
	}
	return nil
}

// The response message used for the EchoErrorDetails method.
type EchoErrorDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SingleDetail    *EchoErrorDetailsResponse_SingleDetail    `protobuf:"bytes,1,opt,name=single_detail,json=singleDetail,proto3" json:"single_detail,omitempty"`
	MultipleDetails *EchoErrorDetailsResponse_MultipleDetails `protobuf:"bytes,2,opt,name=multiple_details,json=multipleDetails,proto3" json:"multiple_details,omitempty"`
}

func (x *EchoErrorDetailsResponse) Reset() {
	*x = EchoErrorDetailsResponse{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoErrorDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoErrorDetailsResponse) ProtoMessage() {}

func (x *EchoErrorDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoErrorDetailsResponse.ProtoReflect.Descriptor instead.
func (*EchoErrorDetailsResponse) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{3}
}

func (x *EchoErrorDetailsResponse) GetSingleDetail() *EchoErrorDetailsResponse_SingleDetail {
	if x != nil {
		return x.SingleDetail
	}
	return nil
}

func (x *EchoErrorDetailsResponse) GetMultipleDetails() *EchoErrorDetailsResponse_MultipleDetails {
	if x != nil {
		return x.MultipleDetails
	}
	return nil
}

type ErrorWithSingleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *anypb.Any `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ErrorWithSingleDetail) Reset() {
	*x = ErrorWithSingleDetail{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorWithSingleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorWithSingleDetail) ProtoMessage() {}

func (x *ErrorWithSingleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorWithSingleDetail.ProtoReflect.Descriptor instead.
func (*ErrorWithSingleDetail) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{4}
}

func (x *ErrorWithSingleDetail) GetDetails() *anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

type ErrorWithMultipleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details []*anypb.Any `protobuf:"bytes,1,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *ErrorWithMultipleDetails) Reset() {
	*x = ErrorWithMultipleDetails{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorWithMultipleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorWithMultipleDetails) ProtoMessage() {}

func (x *ErrorWithMultipleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorWithMultipleDetails.ProtoReflect.Descriptor instead.
func (*ErrorWithMultipleDetails) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorWithMultipleDetails) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

// The request message for the Expand method.
type ExpandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The content that will be split into words and returned on the stream.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The error that is thrown after all words are sent on the stream.
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	// The wait time between each server streaming messages
	StreamWaitTime *durationpb.Duration `protobuf:"bytes,3,opt,name=stream_wait_time,json=streamWaitTime,proto3" json:"stream_wait_time,omitempty"`
}

func (x *ExpandRequest) Reset() {
	*x = ExpandRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExpandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpandRequest) ProtoMessage() {}

func (x *ExpandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpandRequest.ProtoReflect.Descriptor instead.
func (*ExpandRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{6}
}

func (x *ExpandRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ExpandRequest) GetError() *status.Status {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *ExpandRequest) GetStreamWaitTime() *durationpb.Duration {
	if x != nil {
		return x.StreamWaitTime
	}
	return nil
}

// The request for the PagedExpand method.
type PagedExpandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The string to expand.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// The number of words to returned in each page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The position of the page to be returned.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *PagedExpandRequest) Reset() {
	*x = PagedExpandRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagedExpandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedExpandRequest) ProtoMessage() {}

func (x *PagedExpandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedExpandRequest.ProtoReflect.Descriptor instead.
func (*PagedExpandRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{7}
}

func (x *PagedExpandRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PagedExpandRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PagedExpandRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// The response for the PagedExpand method.
type PagedExpandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The words that were expanded.
	Responses []*EchoResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	// The next page token.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *PagedExpandResponse) Reset() {
	*x = PagedExpandResponse{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PagedExpandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PagedExpandResponse) ProtoMessage() {}

func (x *PagedExpandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PagedExpandResponse.ProtoReflect.Descriptor instead.
func (*PagedExpandResponse) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{8}
}

func (x *PagedExpandResponse) GetResponses() []*EchoResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *PagedExpandResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// The request for Wait method.
type WaitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to End:
	//
	//	*WaitRequest_EndTime
	//	*WaitRequest_Ttl
	End isWaitRequest_End `protobuf_oneof:"end"`
	// Types that are assignable to Response:
	//
	//	*WaitRequest_Error
	//	*WaitRequest_Success
	Response isWaitRequest_Response `protobuf_oneof:"response"`
}

func (x *WaitRequest) Reset() {
	*x = WaitRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitRequest) ProtoMessage() {}

func (x *WaitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitRequest.ProtoReflect.Descriptor instead.
func (*WaitRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{9}
}

func (m *WaitRequest) GetEnd() isWaitRequest_End {
	if m != nil {
		return m.End
	}
	return nil
}

func (x *WaitRequest) GetEndTime() *timestamppb.Timestamp {
	if x, ok := x.GetEnd().(*WaitRequest_EndTime); ok {
		return x.EndTime
	}
	return nil
}

func (x *WaitRequest) GetTtl() *durationpb.Duration {
	if x, ok := x.GetEnd().(*WaitRequest_Ttl); ok {
		return x.Ttl
	}
	return nil
}

func (m *WaitRequest) GetResponse() isWaitRequest_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *WaitRequest) GetError() *status.Status {
	if x, ok := x.GetResponse().(*WaitRequest_Error); ok {
		return x.Error
	}
	return nil
}

func (x *WaitRequest) GetSuccess() *WaitResponse {
	if x, ok := x.GetResponse().(*WaitRequest_Success); ok {
		return x.Success
	}
	return nil
}

type isWaitRequest_End interface {
	isWaitRequest_End()
}

type WaitRequest_EndTime struct {
	// The time that this operation will complete.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime,proto3,oneof"`
}

type WaitRequest_Ttl struct {
	// The duration of this operation.
	Ttl *durationpb.Duration `protobuf:"bytes,2,opt,name=ttl,proto3,oneof"`
}

func (*WaitRequest_EndTime) isWaitRequest_End() {}

func (*WaitRequest_Ttl) isWaitRequest_End() {}

type isWaitRequest_Response interface {
	isWaitRequest_Response()
}

type WaitRequest_Error struct {
	// The error that will be returned by the server. If this code is specified
	// to be the OK rpc code, an empty response will be returned.
	Error *status.Status `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type WaitRequest_Success struct {
	// The response to be returned on operation completion.
	Success *WaitResponse `protobuf:"bytes,4,opt,name=success,proto3,oneof"`
}

func (*WaitRequest_Error) isWaitRequest_Response() {}

func (*WaitRequest_Success) isWaitRequest_Response() {}

// The result of the Wait operation.
type WaitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This content of the result.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *WaitResponse) Reset() {
	*x = WaitResponse{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitResponse) ProtoMessage() {}

func (x *WaitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitResponse.ProtoReflect.Descriptor instead.
func (*WaitResponse) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{10}
}

func (x *WaitResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// The metadata for Wait operation.
type WaitMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The time that this operation will complete.
	EndTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *WaitMetadata) Reset() {
	*x = WaitMetadata{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitMetadata) ProtoMessage() {}

func (x *WaitMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitMetadata.ProtoReflect.Descriptor instead.
func (*WaitMetadata) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{11}
}

func (x *WaitMetadata) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The amount of time to block before returning a response.
	ResponseDelay *durationpb.Duration `protobuf:"bytes,1,opt,name=response_delay,json=responseDelay,proto3" json:"response_delay,omitempty"`
	// Types that are assignable to Response:
	//
	//	*BlockRequest_Error
	//	*BlockRequest_Success
	Response isBlockRequest_Response `protobuf_oneof:"response"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{12}
}

func (x *BlockRequest) GetResponseDelay() *durationpb.Duration {
	if x != nil {
		return x.ResponseDelay
	}
	return nil
}

func (m *BlockRequest) GetResponse() isBlockRequest_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BlockRequest) GetError() *status.Status {
	if x, ok := x.GetResponse().(*BlockRequest_Error); ok {
		return x.Error
	}
	return nil
}

func (x *BlockRequest) GetSuccess() *BlockResponse {
	if x, ok := x.GetResponse().(*BlockRequest_Success); ok {
		return x.Success
	}
	return nil
}

type isBlockRequest_Response interface {
	isBlockRequest_Response()
}

type BlockRequest_Error struct {
	// The error that will be returned by the server. If this code is specified
	// to be the OK rpc code, an empty response will be returned.
	Error *status.Status `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type BlockRequest_Success struct {
	// The response to be returned that will signify successful method call.
	Success *BlockResponse `protobuf:"bytes,3,opt,name=success,proto3,oneof"`
}

func (*BlockRequest_Error) isBlockRequest_Response() {}

func (*BlockRequest_Success) isBlockRequest_Response() {}

type BlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This content can contain anything, the server will not depend on a value
	// here.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *BlockResponse) Reset() {
	*x = BlockResponse{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse) ProtoMessage() {}

func (x *BlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse.ProtoReflect.Descriptor instead.
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{13}
}

func (x *BlockResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type EchoErrorDetailsResponse_SingleDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorWithSingleDetail `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EchoErrorDetailsResponse_SingleDetail) Reset() {
	*x = EchoErrorDetailsResponse_SingleDetail{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoErrorDetailsResponse_SingleDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoErrorDetailsResponse_SingleDetail) ProtoMessage() {}

func (x *EchoErrorDetailsResponse_SingleDetail) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoErrorDetailsResponse_SingleDetail.ProtoReflect.Descriptor instead.
func (*EchoErrorDetailsResponse_SingleDetail) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{3, 0}
}

func (x *EchoErrorDetailsResponse_SingleDetail) GetError() *ErrorWithSingleDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type EchoErrorDetailsResponse_MultipleDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *ErrorWithMultipleDetails `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *EchoErrorDetailsResponse_MultipleDetails) Reset() {
	*x = EchoErrorDetailsResponse_MultipleDetails{}
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoErrorDetailsResponse_MultipleDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoErrorDetailsResponse_MultipleDetails) ProtoMessage() {}

func (x *EchoErrorDetailsResponse_MultipleDetails) ProtoReflect() protoreflect.Message {
	mi := &file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoErrorDetailsResponse_MultipleDetails.ProtoReflect.Descriptor instead.
func (*EchoErrorDetailsResponse_MultipleDetails) Descriptor() ([]byte, []int) {
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP(), []int{3, 1}
}

func (x *EchoErrorDetailsResponse_MultipleDetails) GetError() *ErrorWithMultipleDetails {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_qclaogui_showcase_v1beta1_echo_proto protoreflect.FileDescriptor

var file_qclaogui_showcase_v1beta1_echo_proto_rawDesc = []byte{
	0x0a, 0x24, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x63,
	0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x65, 0x63, 0x68, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69,
	0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x86, 0x02, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3f, 0x0a, 0x08,
	0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61,
	0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x74, 0x68,
	0x65, 0x72, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xe2, 0x8c,
	0xcf, 0xd7, 0x08, 0x02, 0x08, 0x01, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x64, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x0c, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x71, 0x63, 0x6c,
	0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x17, 0x45, 0x63, 0x68, 0x6f,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x22, 0xa7, 0x03,
	0x0a, 0x18, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x40, 0x2e, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f,
	0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x63,
	0x68, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x6e, 0x0a, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x71, 0x63,
	0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x1a, 0x56, 0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x46, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77,
	0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x5c, 0x0a, 0x0f, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x49, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x71, 0x63,
	0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x57, 0x69, 0x74,
	0x68, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x47, 0x0a, 0x15, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x2e, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x4a, 0x0a, 0x18, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x57, 0x69, 0x74, 0x68, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x98, 0x01, 0x0a,
	0x0d, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x43, 0x0a, 0x10, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x57,
	0x61, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x64,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x02, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x50, 0x61,
	0x67, 0x65, 0x64, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e,
	0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x09, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xf9, 0x01, 0x0a, 0x0b, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x03, 0x74, 0x74, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x48, 0x01, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x43, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69,
	0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x01,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x65, 0x6e, 0x64,
	0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x0c,
	0x57, 0x61, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0c, 0x57, 0x61, 0x69, 0x74, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xce, 0x01,
	0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40,
	0x0a, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x44, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x71, 0x63, 0x6c, 0x61, 0x6f, 0x67, 0x75, 0x69, 0x2e, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73,
	0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29,
	0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2a, 0x82, 0x01, 0x0a, 0x08, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x4e,
	0x45, 0x43, 0x45, 0x53, 0x53, 0x41, 0x52, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45,
	0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x45, 0x43, 0x45, 0x53, 0x53, 0x41, 0x52, 0x59,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x55,
	0x52, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x04, 0x42, 0x42,
	0x5a, 0x40, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x6c,
	0x61, 0x6f, 0x67, 0x75, 0x69, 0x2f, 0x67, 0x61, 0x69, 0x70, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x68, 0x6f, 0x77, 0x63, 0x61, 0x73, 0x65,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qclaogui_showcase_v1beta1_echo_proto_rawDescOnce sync.Once
	file_qclaogui_showcase_v1beta1_echo_proto_rawDescData = file_qclaogui_showcase_v1beta1_echo_proto_rawDesc
)

func file_qclaogui_showcase_v1beta1_echo_proto_rawDescGZIP() []byte {
	file_qclaogui_showcase_v1beta1_echo_proto_rawDescOnce.Do(func() {
		file_qclaogui_showcase_v1beta1_echo_proto_rawDescData = protoimpl.X.CompressGZIP(file_qclaogui_showcase_v1beta1_echo_proto_rawDescData)
	})
	return file_qclaogui_showcase_v1beta1_echo_proto_rawDescData
}

var file_qclaogui_showcase_v1beta1_echo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_qclaogui_showcase_v1beta1_echo_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_qclaogui_showcase_v1beta1_echo_proto_goTypes = []any{
	(Severity)(0),                                    // 0: qclaogui.showcase.v1beta1.Severity
	(*EchoRequest)(nil),                              // 1: qclaogui.showcase.v1beta1.EchoRequest
	(*EchoResponse)(nil),                             // 2: qclaogui.showcase.v1beta1.EchoResponse
	(*EchoErrorDetailsRequest)(nil),                  // 3: qclaogui.showcase.v1beta1.EchoErrorDetailsRequest
	(*EchoErrorDetailsResponse)(nil),                 // 4: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse
	(*ErrorWithSingleDetail)(nil),                    // 5: qclaogui.showcase.v1beta1.ErrorWithSingleDetail
	(*ErrorWithMultipleDetails)(nil),                 // 6: qclaogui.showcase.v1beta1.ErrorWithMultipleDetails
	(*ExpandRequest)(nil),                            // 7: qclaogui.showcase.v1beta1.ExpandRequest
	(*PagedExpandRequest)(nil),                       // 8: qclaogui.showcase.v1beta1.PagedExpandRequest
	(*PagedExpandResponse)(nil),                      // 9: qclaogui.showcase.v1beta1.PagedExpandResponse
	(*WaitRequest)(nil),                              // 10: qclaogui.showcase.v1beta1.WaitRequest
	(*WaitResponse)(nil),                             // 11: qclaogui.showcase.v1beta1.WaitResponse
	(*WaitMetadata)(nil),                             // 12: qclaogui.showcase.v1beta1.WaitMetadata
	(*BlockRequest)(nil),                             // 13: qclaogui.showcase.v1beta1.BlockRequest
	(*BlockResponse)(nil),                            // 14: qclaogui.showcase.v1beta1.BlockResponse
	(*EchoErrorDetailsResponse_SingleDetail)(nil),    // 15: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.SingleDetail
	(*EchoErrorDetailsResponse_MultipleDetails)(nil), // 16: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.MultipleDetails
	(*status.Status)(nil),                            // 17: google.rpc.Status
	(*anypb.Any)(nil),                                // 18: google.protobuf.Any
	(*durationpb.Duration)(nil),                      // 19: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                    // 20: google.protobuf.Timestamp
}
var file_qclaogui_showcase_v1beta1_echo_proto_depIdxs = []int32{
	17, // 0: qclaogui.showcase.v1beta1.EchoRequest.error:type_name -> google.rpc.Status
	0,  // 1: qclaogui.showcase.v1beta1.EchoRequest.severity:type_name -> qclaogui.showcase.v1beta1.Severity
	0,  // 2: qclaogui.showcase.v1beta1.EchoResponse.severity:type_name -> qclaogui.showcase.v1beta1.Severity
	15, // 3: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.single_detail:type_name -> qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.SingleDetail
	16, // 4: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.multiple_details:type_name -> qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.MultipleDetails
	18, // 5: qclaogui.showcase.v1beta1.ErrorWithSingleDetail.details:type_name -> google.protobuf.Any
	18, // 6: qclaogui.showcase.v1beta1.ErrorWithMultipleDetails.details:type_name -> google.protobuf.Any
	17, // 7: qclaogui.showcase.v1beta1.ExpandRequest.error:type_name -> google.rpc.Status
	19, // 8: qclaogui.showcase.v1beta1.ExpandRequest.stream_wait_time:type_name -> google.protobuf.Duration
	2,  // 9: qclaogui.showcase.v1beta1.PagedExpandResponse.responses:type_name -> qclaogui.showcase.v1beta1.EchoResponse
	20, // 10: qclaogui.showcase.v1beta1.WaitRequest.end_time:type_name -> google.protobuf.Timestamp
	19, // 11: qclaogui.showcase.v1beta1.WaitRequest.ttl:type_name -> google.protobuf.Duration
	17, // 12: qclaogui.showcase.v1beta1.WaitRequest.error:type_name -> google.rpc.Status
	11, // 13: qclaogui.showcase.v1beta1.WaitRequest.success:type_name -> qclaogui.showcase.v1beta1.WaitResponse
	20, // 14: qclaogui.showcase.v1beta1.WaitMetadata.end_time:type_name -> google.protobuf.Timestamp
	19, // 15: qclaogui.showcase.v1beta1.BlockRequest.response_delay:type_name -> google.protobuf.Duration
	17, // 16: qclaogui.showcase.v1beta1.BlockRequest.error:type_name -> google.rpc.Status
	14, // 17: qclaogui.showcase.v1beta1.BlockRequest.success:type_name -> qclaogui.showcase.v1beta1.BlockResponse
	5,  // 18: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.SingleDetail.error:type_name -> qclaogui.showcase.v1beta1.ErrorWithSingleDetail
	6,  // 19: qclaogui.showcase.v1beta1.EchoErrorDetailsResponse.MultipleDetails.error:type_name -> qclaogui.showcase.v1beta1.ErrorWithMultipleDetails
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_qclaogui_showcase_v1beta1_echo_proto_init() }
func file_qclaogui_showcase_v1beta1_echo_proto_init() {
	if File_qclaogui_showcase_v1beta1_echo_proto != nil {
		return
	}
	file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[0].OneofWrappers = []any{
		(*EchoRequest_Content)(nil),
		(*EchoRequest_Error)(nil),
	}
	file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[9].OneofWrappers = []any{
		(*WaitRequest_EndTime)(nil),
		(*WaitRequest_Ttl)(nil),
		(*WaitRequest_Error)(nil),
		(*WaitRequest_Success)(nil),
	}
	file_qclaogui_showcase_v1beta1_echo_proto_msgTypes[12].OneofWrappers = []any{
		(*BlockRequest_Error)(nil),
		(*BlockRequest_Success)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qclaogui_showcase_v1beta1_echo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qclaogui_showcase_v1beta1_echo_proto_goTypes,
		DependencyIndexes: file_qclaogui_showcase_v1beta1_echo_proto_depIdxs,
		EnumInfos:         file_qclaogui_showcase_v1beta1_echo_proto_enumTypes,
		MessageInfos:      file_qclaogui_showcase_v1beta1_echo_proto_msgTypes,
	}.Build()
	File_qclaogui_showcase_v1beta1_echo_proto = out.File
	file_qclaogui_showcase_v1beta1_echo_proto_rawDesc = nil
	file_qclaogui_showcase_v1beta1_echo_proto_goTypes = nil
	file_qclaogui_showcase_v1beta1_echo_proto_depIdxs = nil
}
