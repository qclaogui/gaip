syntax = "proto3";

package qclaogui.generativelanguage.v1beta;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option go_package = "github.com/qclaogui/gaip/genproto/generativelanguage/apiv1beta/generativelanguagepb";

// Permission resource grants user, group or the rest of the world access to the
// PaLM API resource (e.g. a tuned model, corpus).
//
// A role is a collection of permitted operations that allows users to perform
// specific actions on PaLM API resources. To make them available to users,
// groups, or service accounts, you assign roles. When you assign a role, you
// grant permissions that the role contains.
//
// There are three concentric roles. Each role is a superset of the previous
// role's permitted operations:
//
// - reader can use the resource (e.g. tuned model, corpus) for inference
// - writer has reader's permissions and additionally can edit and share
// - owner has writer's permissions and additionally can delete
message Permission {
  option (google.api.resource) = {
    type: "generativelanguage.qclaogui.com/Permission"
    pattern: "tunedModels/{tuned_model}/permissions/{permission}"
    pattern: "corpora/{corpus}/permissions/{permission}"
    plural: "permissions"
    singular: "permission"
  };

  // Defines types of the grantee of this permission.
  enum GranteeType {
    // The default value. This value is unused.
    GRANTEE_TYPE_UNSPECIFIED = 0;

    // Represents a user. When set, you must provide email_address for the user.
    USER = 1;

    // Represents a group. When set, you must provide email_address for the
    // group.
    GROUP = 2;

    // Represents access to everyone. No extra information is required.
    EVERYONE = 3;
  }

  // Defines the role granted by this permission.
  enum Role {
    // The default value. This value is unused.
    ROLE_UNSPECIFIED = 0;

    // Owner can use, update, share and delete the resource.
    OWNER = 1;

    // Writer can use, update and share the resource.
    WRITER = 2;

    // Reader can use the resource.
    READER = 3;
  }

  // Output only. Identifier. The permission name. A unique name will be
  // generated on create. Examples:
  //     tunedModels/{tuned_model}/permissions/{permission}
  //     corpora/{corpus}/permissions/{permission}
  // Output only.
  string name = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IDENTIFIER
  ];

  // Optional. Immutable. The type of the grantee.
  optional GranteeType grantee_type = 2 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Optional. Immutable. The email address of the user of group which this
  // permission refers. Field is not set when permission's grantee type is
  // EVERYONE.
  optional string email_address = 3 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Required. The role granted by this permission.
  optional Role role = 4 [(google.api.field_behavior) = REQUIRED];
}
